<?xml version="1.0" encoding="UTF-8"?>
		<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" version="2.0">
		<channel>
		<title>ProgrammerBOX -プログラマーボックス-</title>
		<atom:link href="http://programmerbox.com/feed.xml" rel="self" type="application/rss+xml"/>
		<link>http://programmerbox.com/</link>
		<description>
		<![CDATA[
		プログラマーボックスはITニュースをお届けしながら主にPHP,CSS3,JavaScriptのコードを箱に詰め込み、あなたにお届けするブログです。
		]]>
		</description>
		<language>ja</language>
		<copyright>Copyright 2013</copyright>
		
		<generator uri="http://programmerbox.com/">ProgrammerBOX -プログラマーボックス-</generator>
		
		<sy:updatePeriod>hourly</sy:updatePeriod>
		<sy:updateFrequency>1</sy:updateFrequency>
		<lastBuildDate>Fri, 14 Feb 2014 21:32:28 +0900</lastBuildDate><item>
			<title>2014年のトレンドはペロペロ感である。思わずペロペロしたくなるアプリアイコン28選！！</title>
			<link>
			http://programmerbox.com/2014-02-14_app_icon_design_peropero/
			</link>
			<description>
			<![CDATA[
			2014年になりますますwebよりアプリを利用する時間が多くなりました。ペロペロ感が出ているアイコンを今回は集めてみました。アプリを作成し、アイコンを作る時に参考にしましょ...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>2014年になりますますwebよりアプリを利用する時間が多くなりました。ペロペロ感が出ているアイコンを今回は集めてみました。アプリを作成し、アイコンを作る時に参考にしましょう。</p>

<nav class="detail_press_index clearfix">
	<p id="s_0p"><span class="color">目次</span></p>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">ペロペロ感とは？</span></li>
		<li class="n_2"><span class="scroll_btn">思わずペロペロしたくなるアプリアイコン28選！！</span></li>
		<li class="n_3"><span class="scroll_btn">アイコンギャラリーサイト</span></li>
		<li class="n_4"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>


<style>
.app_icon_radius {
	border-radius: 79px !important;
	border-radius: 23.2% !important;
	border: 0px solid #CCCCCC !important;
}

/************************
メディアクエリ設定 0〜768
************************/
@media screen and (min-width: 0px) and (max-width: 768px) {
	.app_icon_radius {
		border-radius: 84px !important;
	border-radius: 23.5% !important;
	}
}
/************************
メディアクエリ設定 0〜480
************************/
@media screen and (min-width: 0px) and (max-width: 480px) {
	.app_icon_radius {
		border-radius: 52px !important;
	border-radius: 23.6% !important;
	}
}
/************************
メディアクエリ設定 0〜320
************************/
@media screen and (min-width: 0px) and (max-width: 320px) {
	.app_icon_radius {
		border-radius: 46px !important;
	border-radius: 24.7% !important;
	}
}
</style>


<h2 class="heading">ペロペロ感とは？</h2>
<p><strong>フラットと質感のバランスが8:2</strong>であったり、流行のデザインであったりがペロペロ感になるのですが、<strong>ペロペロしたいと感じた場合</strong>は特別にどんなデザインでもペロペロ感が出ているアイコンになります。</p>

<h2 class="heading">思わずペロペロしたくなるアプリアイコン28選！！</h2>
<p>厳選に厳選を重ねて選び抜きましたのでペロペロ感が強いと思われます。こんな感じのアイコンがペロペロ感になりますので覚えておきましょう。</p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_268.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" style="border: 1px solid #CCCCCC !important;" src="../assets/img/press/image/image_269.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" style="border: 1px solid #CCCCCC !important;" src="../assets/img/press/image/image_270.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_271.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_272.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_273.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_274.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_275.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_276.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_277.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_278.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_279.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_280.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_281.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_282.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>

<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_283.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_284.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_285.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_286.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" style="border: 1px solid #CCCCCC !important;" src="../assets/img/press/image/image_287.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_288.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_289.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_290.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_291.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_293.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_294.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" style="border: 1px solid #CCCCCC !important;" src="../assets/img/press/image/image_295.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>


<p class="m_0">
		<img class="press_mini_image app_icon_radius m_0" src="../assets/img/press/image/image_297.jpg" widht="640" height="400" alt="" title="">
</p>
<p> </p>







<h2 class="heading">アイコンギャラリーサイト</h2>
<p>今回、ペロペロ感が出ているアイコンを探す為に閲覧したサイトも載せておきます。</p>




<h3>IICNS: A Library collection of beatifully designed iOS App icons</h3>
<p class="m_0">
	<a target="_blank" href="http://iicns.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_263.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://iicns.com/">IICNS: A Library collection of beatifully designed iOS App icons</a>
</p>
<p> </p>


<h3>iconDrop｜デザインから探せるiOSアプリアイコンギャラリー</h3>
<p class="m_0">
	<a target="_blank" href="http://icondrop.net/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_264.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://icondrop.net/">iconDrop｜デザインから探せるiOSアプリアイコンギャラリー</a>
</p>
<p> </p>

<h3>iOS Icon Gallery | A gallery showcasing great icon designs from the iOS ecosystem</h3>
<p class="m_0">
	<a target="_blank" href="http://iosicongallery.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_265.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://iosicongallery.com/">iOS Icon Gallery | A gallery showcasing great icon designs from the iOS ecosystem</a>
</p>
<p> </p>

<h3>After iOS 7 icons</h3>
<p class="m_0">
	<a target="_blank" href="http://afterios7icon.tumblr.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_266.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://afterios7icon.tumblr.com/">After iOS 7 icons</a>
</p>
<p> </p>


<h3>Apple Inspires Me | Best Place for Apple Related Design Inspiration</h3>
<p class="m_0">
	<a target="_blank" href="http://www.appleinspires.me/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_267.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.appleinspires.me/">Apple Inspires Me | Best Place for Apple Related Design Inspiration</a>
</p>
<p> </p>
<h2 class="heading">まとめ</h2>
<p>いかがだったでしょうか？デザインは流行り廃りがありますが、ペロペロ感というのはいつの時代にもあります。<strong>2014年に限ってはフラットにちょい足しがペロペロ感</strong>である事は間違いないです。</p>

<p class="m_0">
フラット＋質感
</p>
<p class="m_0">
フラット＋ロングシャドー
</p>
<p class="m_0">
フラット＋パステルカラー
</p>
<p class="m_0">
フラット＋くっきりグラデーション
</p>
<p class="m_0">
フラット＋透明
</p>
<p class="m_0">
フラット＋アニメ調
</p>
<p class="m_0">
フラット＋リアル
</p>
<p>
フラット＋アイコン重ね
</p>


<p>これからアプリのアイコンを作る機会があるならば、この手法を試してみては？</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2014-02-14_app_icon_design_peropero/
			</guid>
			<pubDate>Fri, 14 Feb 2014 21:32:28 +0900</pubDate>
			</item>
			<item>
			<title>Sharingvideoという動画キュレーションメディアを爆速で作ったった！！その工程と技術を解説する。</title>
			<link>
			http://programmerbox.com/2014-01-23_i_make_sharingvideo/
			</link>
			<description>
			<![CDATA[
			2014年は動画元年になる！という事でボクもこの波に乗ろうかと思いまして、爆速でSharingvideo(シェアリングビデオ)という動画キュレーションメディアを開発してみましたので、...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>2014年は動画元年になる！という事でボクもこの波に乗ろうかと思いまして、爆速でSharingvideo(シェアリングビデオ)という動画キュレーションメディアを開発してみましたので、期間と工程と、どのような技術が使われているかという所にスポットを当てて今回は記事を書いていきます。</p>

<nav class="detail_press_index clearfix">
	<p id="s_0p"><span class="color">目次</span></p>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">Sharingvideo(シェアリングビデオ)とは？</span></li>
		<li class="n_2"><span class="scroll_btn">動画メディアの動向がわかる記事</span></li>
		<li class="n_3"><span class="scroll_btn">作ったきっかけは一つの動画を見て感動したから</span></li>
		<li class="n_4"><span class="scroll_btn">開発期間は10日(7割はテストで時間を食っています)</span>
			<ul class="nest">
				<li><span class="nest_number">4-1.</span><span class="scroll_btn">基礎システムに3日</span></li>
				<li><span class="nest_number">4-2.</span><span class="scroll_btn">無限スクロールに2日</span></li>
				<li><span class="nest_number">4-3.</span><span class="scroll_btn">全デバイス対応のドロワーメニューに2日</span></li>
				<li><span class="nest_number">4-4.</span><span class="scroll_btn">デザインに2日</span></li>
				<li><span class="nest_number">4-5.</span><span class="scroll_btn">通信を考慮して最適な記事読み込み数を決めるテストに1日</span></li>
			</ul>

		</li>
		<li class="n_5"><span class="scroll_btn">言語はPHPでフレームワークはFuelPHP</span></li>
		<li class="n_6"><span class="scroll_btn">工程と技術を説明していく</span>
			<ul class="nest">
				<li><span class="nest_number">6-1.</span><span class="scroll_btn">プログラマーボックスのシステムを流用＆改良</span></li>
				<li><span class="nest_number">6-2.</span><span class="scroll_btn">Ajaxで無限スクロールを実装する</span></li>
				<li><span class="nest_number">6-3.</span><span class="scroll_btn">コンテンツ読み込みテストを重ねる</span></li>
				<li><span class="nest_number">6-4.</span><span class="scroll_btn">@Vine版という概念を作る</span></li>
				<li><span class="nest_number">6-5.</span><span class="scroll_btn">全てのデバイスに対応させる</span></li>
				<li><span class="nest_number">6-6.</span><span class="scroll_btn">ドロワーメニューも一応テクい事をしている</span></li>
				<li><span class="nest_number">6-7.</span><span class="scroll_btn">デザインは最後に手をつけた</span></li>
				<li><span class="nest_number">6-8.</span><span class="scroll_btn">人間工学に基づいたUI思想</span></li>
			</ul>
		</li>
		<li class="n_7"><span class="scroll_btn">Sharingvideoをどのように運営しているか？</span></li>
		<li class="n_8"><span class="scroll_btn">Sharingvideoは一緒に運営してくれる方を募集しています</span></li>
		<li class="n_9"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>


<h2 class="heading">Sharingvideo(シェアリングビデオ)とは？</h2>

<p>まず初めにどんなサイトなの？って事なんですが、社会的に意義のある動画を僕たちが選んで紹介していくサイトです。細かい内容についてはaboutを引用してリンクを貼っときます。</p>


<blockquote cite="http://sharingvideo.jp/about/">
		<h4>Sharingvideoについて</h4>
<p>動画はどんなコンテンツよりも人に伝わりやすく、人を変える力を持っています。Sharingvideoは人の心を捉え、人生の糧となる動画をシェアリングしていく事を目的としています。日々、「新しい発見を見つける事が出来る動画」を紹介していきますので、動画の中で「何か」を感じる事がありましたらコメントを添えてシェアして頂けましたら幸いです。そのコメントと動画はあなたと繋がりのあるサービスを通じて流れ届いてゆき、伝わった人がまた違う視点でシェアしてくれるかもしれません。動画の在り方として「好きなものを視聴するコンテンツ」から「人生を変えるかもしれないコンテンツ」へと移り変わっていく中で、共有の体験をあなたと共に。</p>

</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://sharingvideo.jp/about/">about | Sharingvideo -シェアする動画キュレーションメディア-</a></cite></p>

<p class="m_0">
	<a target="_blank" href="http://sharingvideo.jp/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_260.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://sharingvideo.jp/">Sharingvideo -シェアする動画キュレーションメディア-</a>
</p>
<p> </p>


<h2 class="heading">動画メディアの動向がわかる記事</h2>

<p>次になぜ動画なんだって疑問を解決してくれる記事を紹介します。</p>

<p>
	<a target="_blank" href="http://annsuto.blogspot.jp/2014/01/blog-post.html">アンスト!!: 今後の潮流とイケてそうなサービスたち</a>
</p>




<p>
	<a target="_blank" href="http://media-outlines.hateblo.jp/entry/2014/01/16/001640">海外における新興ウェブメディアの隆盛 〜12のメディアから見えてくるもの〜</a>
</p>

<p>
	<a target="_blank" href="http://media-outlines.hateblo.jp/entry/2014/01/20/203951">国連も乗っかるバイラルメディアの波！ 「UN Free & Equal」を知っていますか？</a>
</p>

<p>
	<a target="_blank" href="http://gendai.ismedia.jp/articles/-/36339">開設14ヵ月で月間ユニークユーザー数が3000万!　～史上最速で急成長するバイラル･メディアサイト「Upworthy」の秘密</a>
</p>

<p>
	<a target="_blank" href="http://www.huffingtonpost.jp/the-new-classic/upworthy-share_b_4629838.html">UPWORTHYが伝える「シェア」への執念</a>
</p>


<p>
	<a target="_blank" href="http://www.tribeck.jp/seminar-column/column/owned-media-overseas/02.html">第1回：海外のオウンドメディア動向（2/3）</a>
</p>


<h2 class="heading">作ったきっかけは一つの動画を見て感動したから</h2>

<p>ボクの中で動画というのはYouTubeでお笑いを観るか好きな曲を聴くくらいにしか思っていませんでした。ですが、一つの動画で変わる事ってあるんですね。ボクの中で動画は<strong>「好きなものを視聴するコンテンツ」から「人生を変えるかもしれないコンテンツ」</strong>へと変わりました。</p>

<p>そこで<em>「人生を変えるかもしれないコンテンツ」</em>を広めたくて、そのハブ役みたいなwebサービスを育てて行こうと考え、爆速で開発し、完成に至った次第です。</p>




<h3>In The Fall</h3>
<div class="youtube">
<iframe src="//player.vimeo.com/video/27582815?portrait=0&amp;color=e80212" width="498" height="280" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe> <p><a href="http://vimeo.com/27582815">In The Fall</a> from <a href="http://vimeo.com/user4630714">Steve Cutts</a> on <a href="https://vimeo.com">Vimeo</a>.</p>
</div>

<h2 class="heading">開発期間は10日(7割はテストで時間を食っています)</h2>

<p>根幹システムに限っていえばタイムリーでプログラマーボックスを再構築したばかりでしたので、それをそのまんま流用したので3時間くらいでしょうか。</p>

<p>他の構築にどのくらいかかったかを作業別に説明していきます。</p>


<h3 class="heading b_b_1">基礎システムに3日</h3>
<p>そのまんま流用出来ると言っても思い描いた内部構成とだいぶ違いましたので、その違いを変更する為に3日くらいかかりました。</p>

<h3 class="heading b_b_1">無限スクロールに2日</h3>
<p>昔、SNS作った時に実装したのを思い出して、思い出しながら実装しました。いかに気持よく読み込むかをもっと吟味してテストを引き続き行いたいと思います。</p>

<h3 class="heading b_b_1">全デバイス対応のドロワーメニューに2日</h3>
<p>全デバイスに対応させるには意外と難しくて試行錯誤しながら実装しました。ここは大枠のみで、まだデザインを施していません。</p>

<h3 class="heading b_b_1">デザインに2日</h3>
<p>ここも全てのデバイスで見ても、全く同じUIになるように心掛けてデザインしました。</p>

<h3 class="heading b_b_1">通信を考慮して最適な記事読み込み数を決めるテストに1日</h3>
<p>ここが一番大事なので200回くらいテストしました。現状だと3つの記事を表示するのがベストな答えです。</p>


<h2 class="heading">言語はPHPでフレームワークはFuelPHP</h2>
<p>前回の記事で<a target="_blank" href="http://programmerbox.com/2014-01-08_fuelphp_construct_blog/">FuelPHPでプログラマーボックスを再構築したので、このフレームワークの良さを伝えてみる。</a>FuelPHPを覚えたので、使いたくて使いたくて採用しました。</p>

<h2 class="heading">工程と技術を説明していく</h2>
<p>実際にどのような実装をしたのか、順序を追って説明していきます。</p>

<h3 class="heading b_b_1">プログラマーボックスのシステムを流用＆改良</h3>

<p>プログラマーボックスで構築したソースは色々と課題がありましたので、そこらへんを直しつつ、Sharingvideo仕様に改良を行いました。</p>
<h3 class="heading b_b_1">Ajaxで無限スクロールを実装する</h3>

<p>jQueyを使用しつつ、AjaxでTwitterやFacebookのような無限スクロールを実装した訳ですが、そこまで難しくありません。フラグ概念を取り入れフラグを立てたり折ったりするだけで記事を取得出来た場合のみにフラグを立てる事によって何度もAjaxが走らないようにしました。</p>

<p>どちらかと言えばJavaScriptで現在いるセグメントを取得する関数を作る方が大変でした。こんな感じ。</p>

<div class="html_tab">JavaScript</div>
<pre class="brush: javascript; light:true; tab-size: 2;">

//--------------------
//最後のセグメント取得
//--------------------
function category_segment_get() {
	var category_segment = &apos;&apos;;
	segment = location.pathname.split(&apos;/&apos;);
	// ローカルでも動く為に削除
	var del_array = [&quot;sharingvideo&quot;, &quot;&quot;];
	for(var i=0; i&lt;segment.length; i++) {
		for(var ii=0; ii&lt;del_array.length; ii++) {
			segment[i] = segment[i].replace(del_array[ii], &apos;&apos;);
		}
	}
	for(var iii=0; iii&lt;segment.length; iii++) {
	 if(segment[iii].length &gt; 1) {
		 category_segment = segment[iii];
	 }
	}
	return category_segment;
}

www.とか、テストしてません。

</pre>

<h3 class="heading b_b_1 m_t_30">コンテンツ読み込みテストを重ねる</h3>
<p>読み込んだ時の時間といいますか。回線を光回線の場合、WiFiの場合、3Gの場合の三つ用意して、デバイスを13インチMacBook Pro Retina、エイサーの小さいノートPC、iPad mini、iPhone5、Android（機種不明）の5つ用意して、コンテンツ量を調整して一番快適な記事数を決めました。</p>

<h3 class="heading b_b_1">@Vine版という概念を作る</h3>
<p>実は完成してからVineの動画も取り入れて行こうと決めました。ですが、他の動画と比率等々が違うので、カテゴリ分けという概念ではなく、別TLともいいますか、全く別のページにしました。</p>

<h3 class="heading b_b_1">全てのデバイスに対応させる</h3>
<p> モバイルファースト思想で構築していき、簡単なレプポンシブを取り入れ、どのデバイスで閲覧してもUIが変わる事がないように力を入れました。</p>

<h3 class="heading b_b_1">ドロワーメニューも一応テクい事をしている</h3>
<p>こんなやつ。</p>
<p><img class="" src="../assets/img/press/image/image_262.png" width="30" height="19" alt="" title=""></p>



<p>レスポンシブにするにあたってモバイルファーストの為に実装したドロワーメニューが皮肉にも邪魔をしてしまい、ここも苦労しました。というのもドロワーメニューは固定サイズなのですが、ブラウザの大きさが変わってくるとドロワーメニューがコンテンツと被る隙間って変わるんですよ。(魔の900px〜768pxあたり)そこでどんなブラウザの大きさでも自動で計算して一番見やすい場所にドロワーメニューを移動する事を実装しました。</p>


<h3 class="heading b_b_1">デザインは最後に手をつけた</h3>
<p>デザインは最初に行った場合の方がテンションが高くなるのですが、今回開発するサービスに至ってはコンテンツの色や映像が変わるので最初にデザインを行うと後々破綻する恐れがあるので一番最後に致しました。と言っても大枠は最初から変更に次ぐ変更で作り込んで行きます。で、最後にテーマカラーを決めて配色する感じですね。</p>

<h3 class="heading b_b_1">人間工学に基づいたUI思想</h3>
<p>時間は掛けていませんが、人間工学に基づいてUIを設計しました。ボクは左利きなのですが、日本に至っては殆どの方が右利きなので右利きの人がもっとも楽に操作でき、コンテンツを流れるように見るかという所に重点を置き、ロゴの位置をあまり見受けられない右寄りに配置し、ドロワーメニューを右に配置しました。</p>

<p>何故その配置かといいますと、殆どの人間は左から右に見る癖があります。右寄りの情報はあまり脳には入って来ません。ボクが見て欲しいのはロゴではなくて、コンテンツなんですね。同じ理由でカテゴリーバンドも右に配置しています。</p>



<h2 class="heading">Sharingvideoをどのように運営しているか？</h2>
<p>現在、Sharingvideoチームはボク含め2名です。もう一人は記事を書く事を生業としていた方で2年前に東京でシェアハウスに住んでいた事がありまして、そこで出会った友人です。</p>

<h2 class="heading">Sharingvideoは一緒に運営してくれる方を募集しています</h2>
<p>記事内容から逸れてしまって大変申し訳ないのですが、Sharingvideoを一緒に運営しくれる方を探しています。現在2人で運営しているんですけど、デザイナーと動画を探してくれる方、アプリ開発者が足りませんのでコミットしてくれる方がいらっしゃいましたら是非お願いしたいです。みなさん忙しいと思いますので、コミットの量は自由です。 要は土日プロジェクトみたいなもんです。ただ、マネタイズの出来ていないサービスですので、お金という報酬は現状ではありません。ですが、ゆくゆくは成長した時に、このプロジェクトの中枢を任せたいと思っております。</p>

<ol>
	<li>
		<dl>
			<dt>webデザイナー</dt>
			<dd>ロゴやドロワーメニュー内のカテゴリーアイコンをメインに全てのデザインを任せたいと考えています。</dd>
		</dl>
	</li>
	<li>
		<dl>
			<dt>キュレーター</dt>
			<dd>新鮮で社会に出す意義がある動画を探して良質なタイトルを考え記事をupしてくれる方を募集しています。</dd>
		</dl>
	</li>
	<li>
		<dl>
			<dt>アプリ開発者(Objective-C)</dt>
			<dd>サイトをアプリケーションに昇華させたいと考えていまして、ネイティブアプリを開発してくれる方を募集しています。</dd>
		</dl>
	</li>
</ol>

<p>お手伝い出来るよ！って方は是非<a href="https://twitter.com/mtoksuy" target="_blank">@mtoksuy</a>宛にリプライか、<a href="http://programmerbox.com/contact/" target="_blank">お問い合わせ</a>からご連絡頂けたら幸いです。</p>



<h2 class="heading">まとめ</h2>
<p>久々に真面目なプロジェクトを立ち上げてみました。どうなるかなんてわかりませんが、そこも楽しみつつ運営して行きたいと考えています。</p>


<p>webサービスが初期の段階でどのように作られるかを分かって頂けたでしょうか？Yahooが爆速を掲げていたようにスピードというのはかなり重要で、初期にあたっての品質は重要ではないんですよね。初めの立ち上がりはスピードが大事です。ボロでも良いのでプロトタイプを見て未来が見えるか見えないかを重要視しています。実際に運営してみて分かる事も多いです。</p>

<p>10日でプロトタイプが完成しないようであれば70%そのプロジェクトは失敗と見ていいでしょう。なので、今回はギリギリのラインなんですよね。</p>


<p>最後に、この記事を見ているみなさんがwebサービスを作る時に、少しでも参考になるようであれば幸いです。共に頑張りましょう。</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2014-01-23_i_make_sharingvideo/
			</guid>
			<pubDate>Thu, 23 Jan 2014 11:25:27 +0900</pubDate>
			</item>
			<item>
			<title>FuelPHPでプログラマーボックスを再構築したので、このフレームワークの良さを伝えてみる。</title>
			<link>
			http://programmerbox.com/2014-01-08_fuelphp_construct_blog/
			</link>
			<description>
			<![CDATA[
			サーバの移行も完了して前々からローカルでちょこちょこ作成していたFuelPHPで完全書き換えしたプログラマーボックスを本番に上げて、めでたく通常運用になりましたのでFuelPHP...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>サーバの移行も完了して前々からローカルでちょこちょこ作成していたFuelPHPで完全書き換えしたプログラマーボックスを本番に上げて、めでたく通常運用になりましたのでFuelPHPとはなんぞや！？というところからFuelPHPの新しい情報の収集する時のサイトなんかを紹介しつつ、どんな感じでFuelPHPで書き換えたかを書いていきたいと思います。</p>

<nav class="detail_press_index clearfix">
	<p id="s_0p"><span class="color">目次</span></p>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">FuelPHPとは？</span>
			<ul class="nest">
				<li><span class="nest_number">1-1.</span><span class="scroll_btn">書籍関連のリスト</span></li>
				<li><span class="nest_number">1-2.</span><span class="scroll_btn">FuelPHP情報を知ろう</span></li>
				<li><span class="nest_number">1-3.</span><span class="scroll_btn">FuelPHPの良さを伝えるスライド</span></li>
			</ul>
		</li>
		<li class="n_2"><span class="scroll_btn">プログラマーボックスを構築した際のポイント</span>
			<ul class="nest">
				<li><span class="nest_number">2-1.</span><span class="scroll_btn">想定ディレクトリ構成</span></li>
				<li><span class="nest_number">2-3.</span><span class="scroll_btn">ルーティングで制御を司るようにする</span></li>
				<li><span class="nest_number">2-4.</span><span class="scroll_btn">独自のセグメント判定機能を作る</span></li>
				<li><span class="nest_number">2-2.</span><span class="scroll_btn">コントローラーを肥大化させない為に</span></li>
				<li><span class="nest_number">2-5.</span><span class="scroll_btn">独自のテンプレートを作る</span></li>
				<li><span class="nest_number">2-6.</span><span class="scroll_btn">機能毎にmodelで切り分ける</span></li>
				<li><span class="nest_number">2-7.</span><span class="scroll_btn">dbのキャッシュ機能を使う</span></li>
				<li><span class="nest_number">2-8.</span><span class="scroll_btn">assetsフォルダに対応するべくパッチファイルを作成</span></li>
				<li><span class="nest_number">2-9.</span><span class="scroll_btn">スモールWordPressを作る</span></li>
			</ul>
		</li>
		<li class="n_3"><span class="scroll_btn">FuelPHPで再構築した結果</span>
			<ul class="nest">
				<li><span class="nest_number">3-1.</span><span class="scroll_btn">サーバサイドの実行スピードは遅くなる</span></li>
				<li><span class="nest_number">3-2.</span><span class="scroll_btn">記事を作成してもディレクトリを生成しないので管理が楽になる</span></li>
				<li><span class="nest_number">3-3.</span><span class="scroll_btn">機能毎にきっちり分けるので管理と共にアップデートも楽になる</span></li>
				<li><span class="nest_number">3-4.</span><span class="scroll_btn">DBのキャッシュ機能でかなりパフォーマンスを上げている</span></li>
			</ul>
		</li>
		<li class="n_4"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>


<h2 class="heading">FuelPHPとは？</h2>
<blockquote cite="http://fuelphp.jp/docs/1.7/">
FuelPHP はシンプルで、フレキシブルな、コミュニティにより開発されている PHP 5 用の Web フレームワークです。現在のフレームワークに対する不満から産まれ、開発者のコミュニティからサポート、支持されています。 FuelPHP はとても移植性が高く、多くのサーバで動き、そして、とても綺麗な構文のフレームワークです。 
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://fuelphp.jp/docs/1.7/">FuelPHP ドキュメント</a></cite></p>



<h3 class="heading b_b_1">書籍関連のリスト</h3>

<p class="m_0">2012/07 電子書籍 達人出版会</p>
<p class="m_0"><a target="_blank" href="http://tatsu-zine.com/books/fuelphp1st">はじめてのフレームワークとしての FuelPHP</a></p>
<p>友人に勧められ、この電子書籍でFuelPHPと出会いました。内容は優しく構築方法を説明していて基本となる情報が多くて勉強が捗ります。</p>


<p class="m_0">2013/12 電子書籍 達人出版会</p>
<p class="m_0"><a target="_blank" href="http://tatsu-zine.com/books/fuelphpadvent2012">FuelPHP Advent Calendar 2013</a></p>
<p>無料。2011年、2012年と続き継続されてる事にビックリしました。内容もかなり良くて実践よりのお話が多いので必読です。</p>


<p class="m_0">2012/12 電子書籍 達人出版会</p>
<p class="m_0"><a target="_blank" href="http://tatsu-zine.com/books/fuelphpadvent2012">FuelPHP Advent Calendar 2012</a></p>
<p>無料。様々な観点からFuelPHPの情報が載っていますのでオススメです。もう少ししたら2013年版も出ると思いますので是非是非読みましょう。(記事公開寸前で出てました)</p>


<p class="m_0">2012/03 電子書籍 技術評論社</p>
<p class="m_0"><a target="_blank" href="https://gihyo.jp/dp/sp/advent2011/G11C13">FuelPHP Advent Calendar 2011</a></p>
<p>無料。EPUB形式なのが残念ですがまだダウンロードして読めますので最初の時点の情報も読んでおくと良いかもしれません。</p>


<p class="m_0">2012/06  ソーテック社</p>
<p class="m_0"><a target="_blank" href="http://www.amazon.co.jp/exec/obidos/ASIN/4881669419/serenity01-22/">FuelPHP 入門</a></p>
<p>ごめんなさい、読んでいません。</p>


<p class="m_0">2013/12 電子書籍 Kindle</p>
<p class="m_0"><a target="_blank" href="http://www.amazon.co.jp/exec/obidos/ASIN/B00HGHHFAS/mikakane-22/">fuelphp 逆引きガイド</a></p>
<p>FuelPHP Advent Calendar 2013に参加している、みかかねさんが出した本です。いつのまに笑</p>

<p class="m_0">2012/07 電子書籍Leanpub</p>
<p class="m_0"><a target="_blank" href="http://leanpub.com/how_to_contribute_fuelphp_ja">FuelPHP に貢献する方法</a></p>
<p>ごめんなさい、読んでいません。</p>


<p class="m_0">2013/11 [英語] Packt Publishing[サイト]</p>
<p class="m_0"><a target="_blank" href="http://www.packtpub.com/article/fuelphp">Learning FuelPHP for Effective PHP Development</a></p>
<p>ごめんなさい、読んでいません。</p>

<p class="m_0">2013/02 [英語] 電子書籍Kindle</p>
<p class="m_0"><a target="_blank" href="http://www.amazon.co.jp/FuelPHP-Guide-ebook/dp/B00BHVUG6Y/">FuelPHP Guide</a></p>
<p>ごめんなさい、読んでいません。</p>

<h3 class="heading b_b_1">FuelPHP情報を知ろう</h3>

<p>本家を元に出来るだけ最小限のサイトセレクトにしました。</p>


<p><a href="http://fuelphp.com/" target="_blank">FuelPHP</a>[本家]</p>
<p><a href="http://fuelphp.com/blogs" target="_blank">FuelPHP &raquo; Blogs</a>[本家]</p>
<p><a href="https://github.com/fuel" target="_blank">FuelPHP</a>[github]</p>
<p><a href="https://github.com/fuelphp" target="_blank">FuelPHP</a>[github][ライブラリ]</p>
<p><a href="http://fuelphp.jp/" target="_blank">FuelPHP.JP 日本語ドキュメント</a></p>
<p><a href="https://github.com/kenjis/fuelphp1st" target="_blank">書籍はじめてのフレームワークとしての FuelPHPサポートサイト</a></p>
<p><a href="http://atnd.org/events/45096" target="_blank">FuelPHP Advent Calendar 2013</a></p>

<h3 class="heading b_b_1">FuelPHPの良さを伝えるスライド</h3>
<p>数多くあるフレームワークの中で何故FuelPHPが良いのか、文章をずらずら書いても伝わりにくいので素敵なスライドをご紹介します。</p>
<div class="slideshare m_t_30">
	<iframe src="http://www.slideshare.net/slideshow/embed_code/23297000" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/kenjis/20130622-fuel-phpintrooscnagoya" title="10分でわかるFuelPHP @ OSC2013 Nagoya" target="_blank">10分でわかるFuelPHP @ OSC2013 Nagoya</a> </strong> from <strong><a href="http://www.slideshare.net/kenjis" target="_blank">kenjis</a></strong> </div></div>


<div class="slideshare m_t_30 m_b_30">
	<iframe src="http://www.slideshare.net/slideshow/embed_code/17553017" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/SoudaiSone/webfuel-php" title="今、最も勢いのあるWebフレームワーク「fuel php」" target="_blank">今、最も勢いのあるWebフレームワーク「fuel php」</a> </strong> from <strong><a href="http://www.slideshare.net/SoudaiSone" target="_blank">Soudai Sone</a></strong> </div>
</div>

<h2 class="heading">プログラマーボックスを構築した際のポイント</h2>
<p>実際に、このブログシステムをどのようにFuelPHPで構築したのかをポイント別に説明していきたいと思います。通常のコントローラーの使い方をしていませんので違和感を感じる方もいるかもしれませんがご容赦下さい。</p>

<h3 class="heading b_b_1">想定ディレクトリ構成</h3>

<p>初めにセキュリティーの面でディレクトリ構成をこんな感じにします。</p>

<div class="html_tab">想定ディレクトリ構成</div>
<pre class="brush: html; light:true; tab-size: 2;">
※ バーチャルホストにする場合
www
├ ...
├ ...
├ ...
├ html(デフォルトはここ)
└ vhosts
	├ ...(他のドメイン)
	└ programmerbox.com
	   ├ ...
	   ├ ...
	   ├ httpdocs(FuelPHPを使わない場合はここ)
	   └ app
           ├ ...(他のフレームワークやアプリを入れる場合はここ)
           └ fuelphp(明示的にfuelphpとしていた方がいい。)
              ├ docs
              ├ fuel
              └ public(FuelPHPを導入する場合、ここをドキュメントルートにする。)


通常の場合はこんな感じ
www
├ ...
├ ...
├ ...
├ html
	 └ fuelphp(明示的にfuelphpとしていた方がいい。)
	    ├ docs
	    ├ fuel
	    └ public(FuelPHPを導入する場合、ここをドキュメントルートにする。)
</pre>
<p class="m_t_30">当たり前なのですが、ドキュメントルート上にFuelPHPを置くという事は全てのファイルを実行されてしまうのでFuelPHPのpublicをドキュメントルートにします。</p>

<p class="m_0">なお、ローカルで開発する場合は様々な環境があるとは思いますが本番環境とローカルのURL構成をまったく同じにしないとセグメントがズレるので同じにします。</p>
<p class="m_0">（例）</p>
<table class="">
	<thead>
		<tr>
			<td>ローカル：</td>
			<td>http://localhost/programmerbox/</td>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>↓</td>
			<td> </td>
		</tr>
		<tr>
			<td>本番：</td>
			<td>http://programmerbox.com/</td>
		</tr>
	</tbody>
</table>






<h3 class="heading b_b_1">独自のセグメント判定機能を作る</h3>
<p>多分プログラマーボックスのシステムはここが一番大事な機能です。ここの判定で全ての挙動を変えています。簡単に説明しますと、サイト内で階層別のセグメントを調べて、そのセグメントが存在するかしないかを判定する関数を作ります。</p>


<h3 class="heading b_b_1">ルーティングで制御を司るようにする</h3>
<p>サイトとユーザーの橋渡し役みたいな感じでエラーならエラーを吐き出したり行かせたいコントローラーに行かせて最終的にviewを表示します。</p>


<p style="color: red;">【追記】2014年01月08日<br>
現在、別のプロジェクトをFuelPHPで構築していますが、このルーティング使用法はあまり宜しくないような気がして来ました。root.php内で制御しつつ、コントローラールールに沿って作成していき、特別なセグメントのみルーティングで回避していくのがベストです。</p>


<div class="html_tab">routes.php</div>
<pre class="brush: php; light:true; tab-size: 2;">
ソースコード表示のSyntaxHighlighterを通すとズレてしまいます。。見づらくてすいません。



// 独自セグメント情報取得
$segment_info_get_array = Model_Info_Basis::segment_info_get();

// エラーページ
if($segment_info_get_array["segment_error"] === FALSE) {
  return array(
    &apos;.*?&apos;  => &apos;error/404&apos;, 
  );
}
	else if($segment_info_get_array["article_judgment"] === true && $segment_info_get_array["article_url_error"] === false) {
		return array(
			&apos;.*?&apos;  => &apos;error/404&apos;, 
		);
	}
	  else {
	    return array(
	      &apos;_root_&apos;                                                     => &apos;root&apos;,          // The default route
	      &apos;_404_&apos;                                                      => &apos;error/404&apos;,     // The main 404 route
	      &apos;about&apos;                                                      => &apos;about&apos;,
	      &apos;contact&apos;                                                    => &apos;contact&apos;,
	      &apos;login&apos;                                                      => &apos;login&apos;,
	      &apos;login/admin&apos;                                                => &apos;login/admin&apos;,
	      &apos;login/admin/post&apos;                                           => &apos;login/admin/post&apos;,
	      &apos;login/admin/logout&apos;                                         => &apos;login/admin/logout&apos;,
	      &apos;(([0-9]{0,4})(-|_)([0-9]{0,2})(-|_)([0-9]{0,2})(-|_)(.*))&apos;  => &apos;article/index&apos;, // 記事
	      &apos;[0-9]+?$&apos;                                                   => &apos;root&apos;,          // トップ ページング
	      &apos;.*?/.*?/[0-9].*?$&apos;                                          => &apos;root&apos;,          // 子セグメントページング
	      &apos;.*?/[0-9].*?$&apos;                                              => &apos;root&apos;,          // 親セグメントページング
	      &apos;.*?/.*?&apos;                                                    => &apos;root&apos;,          // 子セグメント
	      &apos;.*?&apos;                                                        => &apos;root&apos;,          // 親セグメント
	    );
	  }
</pre>


<h3 class="heading b_b_1 m_t_30">コントローラーを肥大化させない為に</h3>
<p>通常FuelPHPではセグメント上でコントローラーを作っていきます。ですが、このままコントローラーを作りますと必ず肥大化してしまいますので、ここは機能別に切り分ける事にしました。</p>



<ol>
	<li>
		<dl>
			<dt>トップ + カテゴリー + ページング</dt>
			<dd>root.php</dd>
		</dl>
	</li>
	<li>
		<dl>
			<dt>記事機能</dt>
			<dd>article.php</dd>
		</dl>
	</li>
	<li>
		<dl>
			<dt>aboutページ</dt>
			<dd>about.php</dd>
		</dl>
	</li>
	<li>
		<dl>
			<dt>contctページ</dt>
			<dd>contct.php</dd>
		</dl>
	</li>
	<li>
		<dl>
			<dt>ログイン機能</dt>
			<dd>login.php</dd>
		</dl>
	</li>
</ol>


<p>もっとくっ付ける事は出来るとは思いますが、関連しない機能を同じにする事はオススメ出来ません。とにかくこれで綺麗なディレクトリになって管理もしやすくなりました。ただ、この形にするにはルーティングをかなりいじる事になりますので、通常はこんな事はしないのかもしれません。（ボクは絶対にした方が良いと思いますが）</p>


<h4>通常のコントローラーの使い方</h4>

<p>通常のセグメント分けとしてコントローラーを作成する場合はこんな感じになります。(あくまでボクの場合)</p>

<div class="html_tab">コントローラー</div>
<pre class="brush: html; light:true; tab-size: 2;">
※ loginだけにスポットをあてた場合

controller
├ login.php
└ login
	├ admin.php
	└ admin
	   ├ logout.php
	   ├ post.php
	   ├ logout
	   └ post

uriとしてはこんな感じになりますね。
programmerbox.com/login/
programmerbox.com/login/admin/
programmerbox.com/login/admin/post/
programmerbox.com/login/admin/logout/

一つのコントローラーファイルでactionを作成していってもいいのですが
ここも切り分け思想の元、こんな感じの形が望ましいです。
</pre>

<h3 class="heading b_b_1 m_t_30">独自のテンプレートを作る</h3>
<p>テンプレートを作らないとコントローラーの意味が半減してしまいますので、何パターンかテンプレートを作成します。テンプレートを作成する際はcontroller側とviews側が密な関係になりますのでそこらへんを気をつけて繋げていきます。</p>

<h4>controller側</h4>
<p>初めにこんなTemplateを作成します。</p>
<div class="html_tab">Template</div>
<pre class="brush: php; light:true; tab-size: 2;">

ソースコード表示のSyntaxHighlighterを通すとズレてしまいます。。見づらくてすいません。

/**
 * コントローラーレイアウトテンプレート
 * 
 * Viewのbasic群をforgeしてテンプレートに流し込み値を返す。
 * 
 * 
 */

class Controller_Basic_Template extends Controller {
	public function __construct(Request $request) {
		$this->request = $request;
	}

	public function before() {
		require APPPATH.&apos;classes/library/autoload.php&apos;;
		$this->basic_template = View::forge(&apos;basic/template&apos;);

		$this->basic_template->view_data = array(
			&apos;title&apos;        => &apos;ProgrammerBOX -プログラマーボックス-&apos;,
			&apos;meta&apos;         => View::forge(&apos;basic/meta&apos;),
			&apos;external_css&apos; => View::forge(&apos;basic/externalcss&apos;),
			&apos;header&apos;       => View::forge(&apos;basic/header&apos;),
			&apos;content&apos;      => View::forge(&apos;basic/content&apos;),
			&apos;paging&apos;       => View::forge(&apos;basic/paging&apos;),
			&apos;side_bar&apos;     => View::forge(&apos;basic/sidebar&apos;),
			&apos;footer&apos;       => View::forge(&apos;basic/footer&apos;),
			&apos;script&apos;       => View::forge(&apos;basic/script&apos;),
		);
		// カテゴリーHTML生成
		$category_ul_html = Model_Sidebar_Basis::sidebar_category_html_create();
		// 人気記事HTML生成
		$popular_li_html = Model_Sidebar_Basis::sidebar_popular_html_create();

		// サイドバーカテゴリーセット
		$this->basic_template->view_data["side_bar"]->set(&apos;sidebar_data&apos;, array(
			&apos;category_ul_html&apos; => $category_ul_html,
			&apos;popular_li_html&apos;  => $popular_li_html,
		), false);
	}
	public function after($response) {
		if($response === null) {
			$response = $this->basic_template;
		}
		return parent::after($response);
	}
}
</pre>


<p class="m_t_30">このTemplateを継承します。</p>


<div class="html_tab">root.php</div>
<pre class="brush: php; light:true; tab-size: 2;">
/**
 * コントローラー root.php
 * 
 * 
 * 
 * 
 */


class Controller_Root extends Controller_Basic_Template {
	public function before() {
		parent::before();
	}

	public function action_index() {
		// セグメント情報取得
		$segment_info_get_array = Model_Info_Basis::segment_info_get();

		// タイトルセット
		$this->basic_template->view_data["title"] = $segment_info_get_array["title_segment"].TITLE;

		// メタセット(トップのみ)
		if($segment_info_get_array["top_judgment"] == true) {
			$this->basic_template->view_data["meta"] = View::forge(&apos;root/meta&apos;);
		}
		// 記事一覧データ取得
		$list_query             = Model_Article_Basis::list_get($segment_info_get_array);
		// 記事一覧HTML生成
		$article_list_html      = Model_Article_Basis::list_html_create($list_query);
		// コンテンツデータセット
		$this->basic_template->view_data["content"]->set(&apos;content_data&apos;, array(
			&apos;summary_query&apos; => $list_query,
			&apos;value&apos;         => $article_list_html,
		), false);

		// ページングHTML追加
		$paging_html = Model_Paging_Basis::paging_html_create($segment_info_get_array);
		// ページングセット
		$this->basic_template->view_data["paging"]->set(&apos;paging_data&apos;, array(
			&apos;paging_html&apos; => $paging_html,
		), false);
	}
}
</pre>


<p class="m_t_30">その時その時のセグメントで必要なデータをModelからもらって来てViewに渡します。たったこれだけで記事やプライマリーなページ以外をこの2つだけで表示出来るようになりました。便利。</p>



<h4>views側</h4>

<p>Controller_Basic_Templateで使おうとしているViewファイルを用意しなくては行けませんので用意します。なお、中身はHTMLと渡している変数だけなので省略させて頂きます。</p>





<div class="html_tab">views</div>
<pre class="brush: html; light:true; tab-size: 2;">

views
└ basic
   ├ content.php
   ├ externalcss.php
   ├ footer.php
   ├ header.php
   ├ meta.php
   ├ paging.php
   ├ script.php
   ├ sidebar.php
   └ template.php
</pre>






<h3 class="heading b_b_1 m_t_30">機能毎にmodelで切り分ける</h3>

<p>Modelの部分では機能毎に切り分けて関数を作成していきました。</p>


<div class="html_tab">Model構成</div>
<pre class="brush: html; light:true; tab-size: 2;">
model
├ article
├ info
├ login
├ mail
├ paging
└ sidebar
</pre>






<h3 class="heading b_b_1 m_t_30">DBのキャッシュ機能を使う</h3>
<p>様々なキャッシュ機能がありますが、今回はDBクラスのキャッシュ機能のみ使用しています。</p>


<div class="html_tab">キャッシュ(例)</div>
<pre class="brush: php; light:true; tab-size: 2;">
// 同じqueryを一日だけキャッシュする
		$query = DB::query("
			SELECT * 
			FROM user")->cached(86400)->execute();
</pre>

<p class="m_t_30">ブログという性質上ずっと同じデータを吐き出しますので、キャッシュ機能を存分に使った方が表示スピードが速くなります。ただ、記事の内容が変更された場合にキャッシュを読み込まないようにした方がいいのですが、その機能は作ってないので改善の余地はあります。</p>



<h3 class="heading b_b_1">assetsフォルダに対応するべくパッチファイルを作成</h3>
<p>あまり関係ないのですが、FuelPHPでは画像やcssをassetsというフォルダにいれる習慣?があったのでここも踏襲したくて、データ移行するときのDBの記事データをそのまま表示しますと画像のパスが間違っていますので、全ての記事データを直す為に一括で変更するパッチファイルを作成して実行しました。</p>


<h3 class="heading b_b_1">スモールWordPressを作る</h3>

<p>サイト上から記事の更新や編集をする為にログイン機能を作成して、取り敢えず更新だけ出来るようにしました。もしかすると、このままバージョンアップしていけばFuelPHP仕様のブログ用CMSをリリースするかもしれません。</p>


<h2 class="heading">FuelPHPで再構築した結果</h2>

<p>本来ならばチームやプロジェクト内で使用してこそのフレームワークなので一人で扱ってもあまり意味はないとは思ったのですが、それでも良い結果を得られたと実感しています。</p>



<h3 class="heading b_b_1">サーバサイドの実行スピードは遅くなる</h3>
<p>当たり前ですがフルスクラッチでオレオレフレームワークで構築していた頃よりも若干ですが、遅くなりました。というかサーバも変えたのでどのくらいってなると数字が出せないのですが大体10ms〜20msくらいフレームワークを通した分は遅くなりました。</p>

<h3 class="heading b_b_1">記事を作成してもディレクトリを生成しないので管理が楽になる</h3>

<p class="m_0">前のシステムでは記事を更新する時に全自動ですが、全てのディレクトリ(記事、カテゴリー、ページング)をわざわざ生成してたので、ここの部分はかなり管理が楽になったように感じます。</p>
<p>このブログはまだまだ記事数がないのにも関わらずそう思ってしまったので早めに解決できて良かったです。</p>


<h3 class="heading b_b_1">機能毎にきっちり分けるので管理と共にアップデートも楽になる</h3>

<p>前のブログシステムでは関数の場所やクラスの在り方が曖昧でしたので、機能毎にきっちり分けられて管理が物凄く楽になりました。</p>

<h3 class="heading b_b_1">DBのキャッシュ機能でかなりパフォーマンスを上げている</h3>

<p>実は前のシステムではアクセスがある度に毎回queryを投げてDBを圧迫していました。一日のquery回数で表すと前は10000回queryを投げていたと仮定して相対的に計算すると現在では100〜200回queryを投げているくらいなのでここの部分のパフォーマンスは上がりました。</p>


<h2 class="heading">まとめ</h2>

<p>FuelPHPと言ったら世界ではまだそんなに流行っていなくて逆に日本では流行る兆しがあるような流れがあります。</p>


<p>Ruby on Rails、Zend Framework、CakePHP、Symfonyの「設定よりも規約」とFuelPHPの「規約より設定」のどちらが正しいかはわかりませんが、FuelPHPの現状は超軽量なので「規約より設定」でも問題なくて、その自由さが日本人には良かったのかもしれません。</p>






<p>実はFuelPHPを勉強するのにかなり時間がかかってしまいました。最初の頃は本当に扱いづらいフレームワークだなって感じていたのですが、一つ一つの機能を覚える毎に逆に扱いやすいフレームワークになっていきました。今でも全ての機能を使った事がないので最適な設計をしたとは言い難いですが、現状、満足しています。次のプロジェクトを開発する時もFuelPHPで構築して、FeulPHPの良い使い方を身につけ発信出来れば良いと思っております。</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2014-01-08_fuelphp_construct_blog/
			</guid>
			<pubDate>Wed, 08 Jan 2014 13:19:55 +0900</pubDate>
			</item>
			<item>
			<title>VPSの構築をマスターする手順書 in ボクとサーバの2週間戦争。</title>
			<link>
			http://programmerbox.com/2013-12-24_vps_construct_procedure_manual/
			</link>
			<description>
			<![CDATA[
			突然ですが、Programmerboxのサーバを移行しました。移行にあたってどんなレンタルサーバが良いのか迷いましたが、お名前.comのVPS(KVM)に致しました。移行にする時のサーバ構築...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>突然ですが、Programmerboxのサーバを移行しました。移行にあたってどんなレンタルサーバが良いのか迷いましたが、お名前.comのVPS(KVM)に致しました。移行にする時のサーバ構築にちょくちょくハマってしまいましたので次に構築する時にハマらないようにここに忘備録として手順と設定方法を書いていきたいと思います。</p>


<nav class="detail_press_index clearfix">
	<p id="s_0p"><span class="color">目次</span></p>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">構築するサーバの目的</span>
			<ul class="nest">
				<li><span class="nest_number">1-1.</span><span class="scroll_btn">お名前.comのVPS(KVM)で構築する</span></li>
				<li><span class="nest_number">1-2.</span><span class="scroll_btn">VPSとは？</span></li>
				<li><span class="nest_number">1-3.</span><span class="scroll_btn">VPS(KVM)メモリ2GBプランの性能を試してみました</span></li>
				<li><span class="nest_number">1-4.</span><span class="scroll_btn">OSはCent OS 6.2 (64bit)で構築します</span></li>
			</ul>
		</li>
		<li class="n_2"><span class="scroll_btn">便利なコマンド集</span></li>
		<li class="n_3"><span class="scroll_btn">SSHで接続出来るようにする</span></li>
		<li class="n_4"><span class="scroll_btn">開発環境を整える</span>
			<ul class="nest">
				<li><span class="nest_number">4-1.</span><span class="scroll_btn">yum関連</span></li>
				<li><span class="nest_number">4-2.</span><span class="scroll_btn">便利なコマンドをインストールする</span></li>
			</ul>
		</li>
		<li class="n_5"><span class="scroll_btn">パケットフィルタリングの設定をする</span></li>
		<li class="n_6"><span class="scroll_btn">DNS設定</span></li>
		<li class="n_7"><span class="scroll_btn">FTPサーバ構築</span>
			<ul class="nest">
				<li><span class="nest_number">7-1.</span><span class="scroll_btn">vsftpdインストール</span></li>
				<li><span class="nest_number">7-2.</span><span class="scroll_btn">vsftpdの設定</span></li>
			</ul>
		</li>
		<li class="n_8"><span class="scroll_btn">webサーバ構築</span>
			<ul class="nest">
				<li><span class="nest_number">8-1.</span><span class="scroll_btn">Apacheインストール</span></li>
				<li><span class="nest_number">8-2.</span><span class="scroll_btn">Apacheの設定</span></li>
				<li><span class="nest_number">8-3.</span><span class="scroll_btn">バーチャルホストの設定</span></li>
			</ul>
		</li>
		<li class="n_9"><span class="scroll_btn">dbサーバ構築</span></li>
		<li class="n_10"><span class="scroll_btn">PHPインストール</span>
			<ul class="nest">
				<li><span class="nest_number">10-1.</span><span class="scroll_btn">PHP.iniの設定</span></li>
			</ul>
		</li>
		<li class="n_11"><span class="scroll_btn">phpMyAdminインストール</span>
			<ul class="nest">
				<li><span class="nest_number">11-1.</span><span class="scroll_btn">phpMyAdmin.confの設定</span></li>
			</ul>
		</li>
		<li class="n_12"><span class="scroll_btn">メールサーバ構築</span>
			<ul class="nest">
				<li><span class="nest_number">12-1.</span><span class="scroll_btn">Dovecotインストール</span></li>
				<li><span class="nest_number">12-2.</span><span class="scroll_btn">Dovecotの設定</span></li>
				<li><span class="nest_number">12-3.</span><span class="scroll_btn">Postfixの基本構築</span></li>
				<li><span class="nest_number">12-4.</span><span class="scroll_btn">サーバの秘密鍵を作成</span></li>
				<li><span class="nest_number">12-5.</span><span class="scroll_btn">証明書の作成</span></li>
				<li><span class="nest_number">12-6.</span><span class="scroll_btn">認証マフィアの説明とメールサーバでは自己認証で問題ない理由。</span></li>
				<li><span class="nest_number">12-7.</span><span class="scroll_btn">PostfixのSSL暗号化設定</span></li>
				<li><span class="nest_number">12-8.</span><span class="scroll_btn">DovecotのSSL暗号化設定</span></li>
			</ul>
		</li>
		<li class="n_13"><span class="scroll_btn">ユーザー作成とメール動作確認</span>
			<ul class="nest">
				<li><span class="nest_number">13-1.</span><span class="scroll_btn">ユーザーを作成した時に自動でユーザーフォルダ直下にMaildirフォルダ作成する</span></li>
				<li><span class="nest_number">13-2.</span><span class="scroll_btn">ユーザー作成</span></li>
				<li><span class="nest_number">13-3.</span><span class="scroll_btn">メール動作確認 & メールクライアント設定</span></li>
			</ul>
		</li>
		<li class="n_14"><span class="scroll_btn">NTPサーバ構築</span>
			<ul class="nest">
				<li><span class="nest_number">14-1.</span><span class="scroll_btn">NTPインストール</span></li>
				<li><span class="nest_number">14-2.</span><span class="scroll_btn">手動で時間を合わせる</span></li>
				<li><span class="nest_number">14-3.</span><span class="scroll_btn">NTPサーバの設定</span></li>
				<li><span class="nest_number">14-4.</span><span class="scroll_btn">同期の確認</span></li>
			</ul>
		</li>
		<li class="n_15"><span class="scroll_btn">参考にしたサイト</span>
			<ul class="nest">
				<li><span class="nest_number">15-1.</span><span class="scroll_btn">全体で勉強になったサイト</span></li>
				<li><span class="nest_number">15-2.</span><span class="scroll_btn">sshで勉強になったサイト</span></li>
				<li><span class="nest_number">15-3.</span><span class="scroll_btn">iptablesで勉強になったサイト</span></li>
				<li><span class="nest_number">15-4.</span><span class="scroll_btn">vsftpdで勉強になったサイト</span></li>
				<li><span class="nest_number">15-5.</span><span class="scroll_btn">httpdで勉強になったサイト</span></li>
				<li><span class="nest_number">15-6.</span><span class="scroll_btn">メール全般で勉強になったサイト</span></li>
				<li><span class="nest_number">15-7.</span><span class="scroll_btn">yumで勉強になったサイト</span></li>
				<li><span class="nest_number">15-8.</span><span class="scroll_btn">PHPをアップデートする時に勉強になったサイト</span></li>
				<li><span class="nest_number">15-9.</span><span class="scroll_btn">phpMyAdminをインストールする時に勉強になったサイト</span></li>
			</ul>
		</li>
		<li class="n_16"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>

<h2 class="heading">構築するサーバの目的</h2>
<p>様々なサーバがあると思いますが、今回はWeb寄りのベーシックな構築を行いたいと思います。</p>
<p>自分自身の要望としては</p>
	<ul>
		<li>前のサーバより多くのアクセスを捌けるようにしたい。</li>
		<li>バーチャルドメインで運用して行きたい。</li>
		<li>FTPでファイルを上げれるようにしたい。</li>
		<li>メールの送受信を行いたい。</li>
		<li>とにかく自由にサーバをいじりたい。</li>
	</ul>
<p class="m_0">まぁ、こんなもんでしょうか。</p>
<p>やはり、自由にカスタマイズ出来るという点が魅力ですね、VPSは。</p>


<h3 class="heading b_b_1">お名前.comのVPS(KVM)で構築する</h3>
<p>VPSと言っても様々な企業が出していますが、今回はお名前.comのVPS(KVM)で構築致します。何処が良いかは個人個人違うと思いますので、自由に選ぶと良いかと思います。何故ならば何処も負けじと料金と性能の差が変わらなくなって来た為です。個人的にオススメなのはお名前.comか、さくらですね。</p>


<p><a href="http://www.onamae.com/" target="_blank">お名前.com</a></p>


<p><a href="http://www.sakura.ne.jp/" target="_blank">レンタルサーバー｜さくらインターネット</a></p>


<h3 class="heading b_b_1">VPSとは？</h3>
<p></p>

<blockquote cite="http://ja.wikipedia.org/wiki/%E3%83%90%E3%83%BC%E3%83%81%E3%83%A3%E3%83%AB%E3%83%BB%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%83%BB%E3%82%B5%E3%83%BC%E3%83%90">
<p>バーチャル・プライベート・サーバ（仮想専用サーバ、英語：virtual private server、略称：VPS）とは、一台の物理的なサーバコンピュータ上で仮想的なサーバコンピュータを何台も起動する技術（仮想機械; Virtual Machine）によってつくられた仮想的なサーバコンピュータである。

VPSは、ホスティングサーバ（レンタルサーバ）事業者のサービスの一つとしても提供されている。これらのサービスは、上記の技術を用いることで、管理者権限が付与される自由度の高い専用サーバを、従来的な専用サーバよりも大幅に安い価格で契約者に提供することを可能にしている。VPS（仮想専用サーバ）は、物理的なサーバを一台占有する「専用サーバ」に比べて処理能力は劣るものの、構成の自由度は専用サーバとほぼ変わらない。</p>
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://ja.wikipedia.org/wiki/%E3%83%90%E3%83%BC%E3%83%81%E3%83%A3%E3%83%AB%E3%83%BB%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%83%BB%E3%82%B5%E3%83%BC%E3%83%90">バーチャル・プライベート・サーバ - Wikipedia</a></cite></p>



<h3 class="heading b_b_1">VPS(kvm)メモリ2GBプランの性能を試してみました</h3>
<p>プラン別の性能はこちらです。</p>

<table class="type_2">
	<thead>
	<tr>
		<th>&nbsp;</th>
		<th>メモリ<br>1GBプラン</th>
		<th>メモリ<br>2GBプラン</th>
		<th>メモリ<br>4GBプラン</th>
		<th>メモリ<br>8GBプラン</th>
		<th>メモリ<br>16GBプラン</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<th>初期費用</th>
		<td><p>無料</p></td>
		<td><p><span>現在は0円</span><br></p></td>
		<td><p>5,680円</p></td>
		<td><p>9,681円</p></td>
		<td><p>16,680円</p></td>
	</tr>
	<tr>
		<th>月額費用<br>（1ヶ月払い）</th>
		<td>940円</td>
		<td>1,380円</td>
		<td>3,880円</td>
		<td>7,880円</td>
		<td>15,880円</td>
	</tr>
	<tr>
		<th>年額費用<br>（1ヶ月あたり）</th>
		<td>9,999円<br>
		（833円/月）</td>
		<td>13,846円<br>
		（1,153円/月）</td>
		<td>38,918円<br>
		（3,243円/月）</td>
		<td>79,027円<br>
		（6,585円/月）</td>
		<td>159,248円<br>
		（13,271円/月）</td>
	</tr>
	<tr>
		<th>CPU</th>
		<td>2コア</td>
		<td>3コア</td>
		<td>4コア</td>
		<td>6コア</td>
		<td>10コア</td>
	</tr>
	<tr>
		<th>メモリ</th>
		<td>1GB</td>
		<td>2GB</td>
		<td>4GB</td>
		<td>8GB</td>
		<td>16GB</td>
	</tr>
	<tr>
		<th>HDD</th>
		<td>100GB</td>
		<td>200GB</td>
		<td>400GB</td>
		<td>800GB</td>
		<td>1TB</td>
	</tr>
	<tr>
		<th>お試しサービス</th>
		<td colspan="5"><span>15日間無料</span></td>
	</tr>
	</tbody>
</table>

<p>で、実際の性能は？という事でAB負荷テストを行いました。</p>
<p>1秒で同時に捌ける限界がアベレージ73アクセスでしたので、ギリギリの同時アクセス70で350接続の結果。</p>


<img class="press_98_image m_0" src="../assets/img/press/image/image_248.jpg" width="640" height="400" alt="" title="">
<p>理論上1日で捌けるアクセス数は518万アクセスですが、サーバは色んな仕事をしますので実際は300万アクセスくらいでしょうか。集中アクセスに耐えられるのは1分間で4,000くらいですね。</p>





<h3 class="heading b_b_1">OSはCent OS 6.2 (64bit)で構築します</h3>

<p>デフォルトOSですし、一番情報が出回っていますので構築しやすいです。</p>


<p class="m_0">お名前のVPS(KVM)が揃えてくれているOS一覧。</p>
<table class="type_2">
	<thead>
		<tr>
			<th>CentOS 5.9,6.2,6.3,6.4</th>
			<td>(32bit/64bit)</td>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>Debian GNU/Linux 6.0,7.0</th>
			<td>(32bit/64bit)</td>
		</tr>
		<tr>
			<th>Fedora 17.18</th>
			<td>(32bit/64bit)</td>
		</tr>
		<tr>
			<th>FreeBSD 9.1,9.2</th>
			<td>(32bit/64bit)</td>
		</tr>
		<tr>
			<th>Ubuntu 12.04LTS 12.10,13.04</th>
			<td>(32bit/64bit)</td>
		</tr>
		<tr>
			<th>Scientific Linux 6.2,6.3</th>
			<td>(32bit/64bit)</td>
		</tr>
		<tr>
			<th>Arch Linux 2011.08.19</th>
			<td>(32bit/64bit)</td>
		</tr>
	</tbody>
</table>

<h2 class="heading">便利なコマンド集</h2>
<p class="m_0">黒い画面で便利したい時。</p>

<code class="command">
<pre>
// 自動起動するサーバ確認
chkconfig --list

// postfixの設定に対して検索が出来る 設定多めのメールサーバなので重宝する
postconf | grep size_limit

// ログを常時表示 メールサーバ構築する時に重宝する
tail -f maillog

// サービスの現在のステータスを調べるコマンド サーバが現在どんな状況なのかを確認したい時
service --status-all 

// シャットダウンして再起動
shutdown -r now
</pre>
</code>

<h2 class="heading">SSHで接続出来るようにする</h2>
<p>サーバをレンタルしてから一番初めに設定しなくてはならないのがsshで接続する設定ですね。</p>

<p>お名前VPS(KVM)は鍵認証のみ許可していますので、お名前のコントロールパネルにログインしましょう。ログインしましたら、SSH Key Pairをダウンロードして下さい。</p>

<p>その次にターミナル or コマンドプロンプトを開いて</p>

<code class="command">
<pre>
ls -a
</pre>
</code>

<p>と、叩いて、.sshがあるかどうかを探して下さい。</p>

<p class="m_0">ある人はそのままで</p>
<p class="m_0">.sshがなかった人は.sshを作りパーミッションの変更を。</p>

<code class="command">
<pre>
mkdir .ssh
chmod 700 .ssh
</pre>
</code>

<p class="m_0">ディレクトリを作成しましたら.sshの中に先ほどダウンロードしたvpsxxxxxxxxx-xxx.keyというファイルを移動しましょう。</p>

<code class="command">
<pre>
mv ~/Downloads/vpsxxxxxxxxx-xxx.key(ダウンロードしてきたファイル) ~/.ssh/
</pre>
</code>

<p class="m_0">移動させましたら次はsshのショートカットを作成致します。</p>
<p class="m_0">.sshに移動してvimでconfigというファイルを作成しましょう。</p>



<code class="command">
<pre>
cd .ssh
vi config
</pre>
</code>

<p>vimが起動しますので以下の記述を自分の設定に書き換えて保存して下さい。</p>


<div class="html_tab">config</div>
<pre class="brush: html; light:true; tab-size: 2;">
Host          test                        # sshのショートカット名
 HostName     xxx.x.xxx.xxx               # サーバのIPアドレス
 Port         22                          # 接続するポート番号
 User         root                        # VPSサーバのユーザー名
 IdentityFile ~/.ssh/vpsxxxxxxxxx-xxx.key # さっき移動したkey
</pre>

<p class="m_t_30 m_0">これでsshのショートカットが完成しましたのでsshで接続してみましょう。</p>

<code class="command">
<pre>
ssh test
</pre>
</code>

<p>無事、接続が出来ましたらここの章は終了です。接続出来なかった場合はもう一度設定するipアドレスや鍵がちゃんと合っているか見直してみましょう。</p>

<h2 class="heading">開発環境を整える</h2>
<p>sshでサーバに接続出来きましたので早速サーバ構築に行きたい所ですが、VPS(KVM)は殆ど何も入っていない状態ですので、ローカルで当たり前に使っていたコマンドが使えません。やはり、いつも使っているコマンドは使いたいですので、yumをアップデートしたり、便利なコマンドをインストールしましょう。</p>

<h3 class="heading b_b_1">yum関連</h3>
<p class="m_0">はじめにyumをアップデート。</p>


<code class="command">
<pre>
yum update
</pre>
</code>

<p class="m_0">アップデートが完了しましたら、次はyumのグループリストを確認して開発者ツールなるものをインストール。</p>

<code class="command">
<pre>
yum grouplist
yum groupinstall &#039;Development tools&#039;
</pre>
</code>

<h3 class="heading b_b_1">便利なコマンドをインストールする</h3>

<p class="m_0">ここで良く使うコマンドをインストールしましょう。</p>

<code class="command">
<pre>
yum install wget
yum install man
yum install cyrus*
yum install mail
yum install telnet
yum install tree 
</pre>
</code>

<h2 class="heading">パケットフィルタリングの設定をする</h2>
<p class="m_0">ファイヤーウォール設定ですね、使用するポートだけを許可するようにしました。ここでファイヤーウォールの設定を一気に済ませとけば、各サーバを構築する時にiptablesを設定している時の開き忘れを防げます。</p>

<code class="command">
<pre>
//----------------------
//ファイヤーウォール設定
//----------------------
// 現在の設定の確認
iptables -L

// FORWARDは使わない
iptables -P FORWARD DROP

// まずは全許可に
iptables -P INPUT ACCEPT

// デフォルトのルールを全て削除
iptables -F

// 自分自身からのパケットは全許可
iptables -A INPUT -i lo -j ACCEPT

// SSH許可 or SSH自分(255.255.255.255)だけ許可
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
 or
iptables -A INPUT -s 255.255.255.255 -p tcp --dport 22 -j ACCEPT

// FTPの接続を許可
iptables -A INPUT -p tcp --dport 20 -j ACCEPT
iptables -A INPUT -p tcp --dport 21 -j ACCEPT
iptables -A INPUT -p tcp --dport 60000:60030 -j ACCEPT

// SMTP(送信メール)の許可
iptables -A INPUT -p tcp --dport 25 -j ACCEPT

// DNS関係
iptables -A INPUT -p tcp --dport 53 -j ACCEPT
iptables -A INPUT -p udp --dport 53 -j ACCEPT

// http, https の接続を許可
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 443 -j ACCEPT

// POP(受信メール)の許可
iptables -A INPUT -p tcp --dport 110 -j ACCEPT

// NTPサーバの通信許可
iptables -A INPUT -p tcp --dport 123 -j ACCEPT

// SUBMISSION ポートを開放
iptables -A INPUT -p tcp --dport 587 -j ACCEPT

// imaps
iptables -A INPUT -p tcp --dport 993 -j ACCEPT

// pop3s
iptables -A INPUT -p tcp --dport 995 -j ACCEPT

// PINGを許可
iptables -A INPUT -p icmp -j ACCEPT

// TCPの接続開始と応答、FTPデータなどを許可
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

// 設定したルール以外のパケットを拒否
iptables -P INPUT DROP

// 設定セーブ
service iptables save

// iptables再起動
service iptables restart
</pre>
</code>

<h2 class="heading">DNS設定</h2>
<p>DNS設定に関しては様々なサービスでやり方が異なるのでそのサービスのやり方をググったりしながら設定をしましょう。この設定が一番大事ですので、必ず設定して下さい。</p>

<p>ここではお名前.comのVPS(KVM)を借りている事を想定して説明させて頂きます。</p>

<p class="m_0">まず、お名前.comのドメインNaviにログインして頂き</p>
<p>ドメイン設定のタブをクリックして下さい。</p>
<p>選択しましたら</p>
<p class="m_0">次はネームサーバーの設定の中にあるネームサーバの変更をクリックして下さい。</p>

<p>変更するドメインにチェックを入れましたら、下の方にあるVPS(KVM)設定するをクリック。</p>

<p>次は確認画面ですのでもう一度設定するをクリックしますとネームサーバの移行が始まります。</p>

<p>ネームサーバの移行は時間がかかりますので一番最初にやっておくと良いかもしれません。
移行が完了しますとお名前.comからメールが送られて来ますので、その完了メールを受信してからようやくDNS関連の設定が出来るようになります。</p>

<p>先ほど同じようにドメイン設定のタブをクリックしてネームサーバ変更の所にある、DNS関連機能の設定をクリックすると画面が変わりましたらDNSレコード設定を利用するを選択し、変更したいドメインを選んで頂き入力画面に進みましょう。</p>

<p><em class="blue_2">指定なし、imap、mail、pop、smtpの五つは最低限必要な設定</em>ですのでやっておきましょう。必要ならばwwwも追加しておくと良いかもしれません。</p>

<p>最終的にはこんな感じになっていれば大丈夫です。</p>

<img class="press_98_image m_0" src="../assets/img/press/image/image_252.jpg" width="640" height="400" alt="" title="">

<p>これでドメインNaviの設定は終わり、次はサーバーNaviのDNS逆引き設定を行いましょう。</p>

<p>この設定は簡単でサーバーNaviにログインして、借りているVPSのコントロールパネルにログインするとDNS逆引き設定するところがありますのでDNS設定を行ったドメインを登録して下さい。</p>


<!--
<img class="press_98_image" src="../assets/img/press/image/image_249.jpg" width="640" height="400" alt="" title="">

<img class="press_98_image m_0" src="../assets/img/press/image/image_251.jpg" width="640" height="400" alt="" title="">

<img class="press_98_image m_0" src="../assets/img/press/image/image_250.jpg" width="640" height="400" alt="" title="">
-->
<h2 class="heading">FTPサーバ構築</h2>
<p>一番初めにFTPサーバを構築していきたいと思います。最初に入れておけば面倒なconf関連の編集がVimではなくお気に入りのエディタで出来るようになりますので、ボクは最初に入れるようにしています。</p>


<h3 class="heading b_b_1">vsftpdインストール</h3>

<p class="m_0">では、yumでFTPサーバをインストールしてみましょう。</p>

<code class="command">
<pre>
yum install vsftpd
</pre>
</code>

<p class="m_0">Complete致しましたらサーバを再起動した時に自動で起動するようにしておきましょう。</p>


<code class="command">
<pre>
chkconfig vsftpd on
</pre>
</code>


<h3 class="heading b_b_1">vsftpdの設定</h3>

<p class="m_0">終わりましたらconfを編集します。</p>


<code class="command">
<pre>
vi /etc/vsftpd/vsftpd.conf
</pre>
</code>

<div class="html_tab">conf</div>
<pre class="brush: html; light:true; tab-size: 2;">
vsFTPdの設定

まず、初期状態では匿名による接続を許可していますので、これを許可しないようにしましょう。
anonymous_enable=YES
↓
anonymous_enable=NO
変更。

次に、ファイルのタイムスタンプにローカル時間（日本時間）を使用するようにします。
最後尾に、
use_localtime=YESを追加。


そして、データのやりとりで使用するPASVモードで使用するポートの範囲を指定します。
pasv_min_port=60000
pasv_max_port=60030
の２行をさらに追加。
</pre>

<p class="m_t_30 m_0">このままの状態ですと、rootで接続出来ませんのでもう2ファイルの設定も変更しましょう。user_listとftpusersのファイルにrootと記述されている所をコメントアウトするだけです。</p>


<code class="command">
<pre>
vi /etc/vsftpd/user_list
vi /etc/vsftpd/ftpusers
</pre>
</code>

<div class="html_tab">user_list & ftpusers</div>
<pre class="brush: html; light:true; tab-size: 2;">
root
↓
# root
</pre>




<p class="m_t_30 m_0">編集が終わりましたらvftpdを再起動させましょう。</p>

<code class="command">
<pre>
service vsftpd restart
</pre>
</code>

<p>これで無事に設定は終了しましたので、FTPソフトの設定は各自設定して下さい。</p>

<h2 class="heading">webサーバ構築</h2>
<p>web開発者にとって必須のサーバですね、構築もそこまで難しくありませんが、バーチャルホストのconfの書く所がググった記事ではバラバラでしたので、そこだけ気をつければ後は問題なく構築出来るような気がします。</p>


<h3 class="heading b_b_1">Apacheインストール</h3>
<p class="m_0">俗にいうApacheをインストールします。</p>

<code class="command">
<pre>
yum install httpd
</pre>
</code>

<h3 class="heading b_b_1">Apacheの設定</h3>


<p class="m_0">インストールしましたら早速confをいじりましょう。</p>


<code class="command">
<pre>
vi /etc/httpd/conf/httpd.conf
</pre>
</code>

<div class="html_tab">httpd.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">

ServerAdmin
  サーバー管理者のメールアドレスを記載します。

ServerName
  DNSで設定したサーバー名とポート番号を記載します。
  (例）ServerName programmerbox.com:80

DocumentRoot
  ウェブコンテンツを保存する場所を記載します。
  バーチャルホストを使わない方もいるかもしれませんので、デフォルトのポイントとしてちゃんと記述しておきます。

&lt;Directory "/var/www/html"&gt;
  ここはDocumentRootと同じディレクトリパスに変更。

&lt;Directory "/var/www/html"&gt;のパスを直したら、その中にある
AllowOverride None を
↓
AllowOverride All に変更しましょう。これで.htaccessが有効になります。
</pre>

<p class="m_t_30 m_0">設定が終わりましたら、自動起動onとhttpdをスタートしましょう。</p>

<code class="command">
<pre>
chkconfig httpd on
service httpd start
</pre>
</code>

<p>スタートしましたら生IP(http://xxx.x.xxx.xxx/)とドメインを叩いて表示されるかどうか確認をしてみて下さい。無事Apache 2 Test Pageと表示されましたらちゃんと動いています。</p>

<h3 class="heading b_b_1">バーチャルホストの設定</h3>
<p class="m_0">一つのサーバで複数のドメインを運用したい時はバーチャルホストを設定しますと出来るようになるのでオススメです。なお、設定する前に<em class="blue_2">追加するドメインのDNSを忘れずに</em>しておいて下さい。</p>

<code class="command">
<pre>
vi /etc/httpd/conf/httpd.conf
</pre>
</code>


<div class="html_tab">httpd.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">

一番下から20行目あたりに
#NameVirtualHost *:80
がありますので、コメントを外して
NameVirtualHost *:80
と、します。これだけでバーチャルホストとして
読んでくれるようになるので、後はhttpd-vhosts.confの中で各ドメインの設定をします。

最後にhttpd-vhosts.confというファイルをインクルードするように末行に
# 追加
include /etc/httpd/conf/httpd-vhosts.conf
を、追加して保存。
</pre>


<p class="m_t_30 m_0">保存が終わりましたら、インクルードさせるhttpd-vhosts.confを作成しましょう。</p>
<code class="command">
<pre>
vi /etc/httpd/conf/httpd-vhosts.conf
</pre>
</code>






<div class="html_tab">httpd-vhosts.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">
設定はこんな感じで、設定したいドメインとドキュメントルートを設定してください。logに関してはコメントアウトしても大丈夫です。

# aaa.comの場合
&lt;VirtualHost *:80&gt;
  ServerAdmin  aaa@aaa.com
  DocumentRoot /var/www/vhosts/aaa.com/httpdocs
  ServerName   aaa.com
  ErrorLog     /var/www/vhosts/aaa.com/error_log
  CustomLog    /var/www/vhosts/aaa.com/access_log common
&lt;/VirtualHost&gt;
&lt;Directory /var/www/vhosts/aaa.com/httpdocs&gt;
  Options FollowSymLinks
  AllowOverride All
  Order allow,deny
  Allow from all
&lt;/Directory&gt;

# bbb.comの場合
&lt;VirtualHost *:80&gt;
  ServerAdmin  bbb@bbb.com
  DocumentRoot /var/www/vhosts/bbb.com/httpdocs
  ServerName   bbb.com
  ErrorLog     /var/www/vhosts/bbb.com/error_log
  CustomLog    /var/www/vhosts/bbb.com/access_log common
&lt;/VirtualHost&gt;
&lt;Directory /var/www/vhosts/bbb.com/httpdocs&gt;
  Options FollowSymLinks
  AllowOverride All
  Order allow,deny
  Allow from all
&lt;/Directory&gt;

ドメインを追加したら随時手動でフォルダを作成して下さい。

フォルダ構成はこんな感じがオススメです。
www
├── cgi-bin
├── error
│    ├...
│     ...
├── html(デフォルトのドキュメントルートはここですね。)
├── icons
│    ├...
│     ...       この階層をドメイン名にしてプライマリーな感じで増やしていく。
└── vhosts    ↓
      └── aaa.com
            ├── access_log
            ├── app
            ├── error_log
            └── httpdocs

フレームワーク等を導入した時にappに切り替えたり出来たりすると思いますので便利です。
</pre>


<p class="m_t_30">これでwebサーバ構築の章は最小限の設定でしたが、これで終わりにさせて頂きます。</p>


<h2 class="heading">dbサーバ構築</h2>
<p>次はdbサーバを構築していきます。webサービスには必須のサーバですので、ちゃんと設定をこなしていきましょう。</p>

<p class="m_0">mysql、mysql-server、mysql-develをインストールして自動起動onにしてスタート。</p>

<code class="command">
<pre>
yum install mysql
yum install mysql-server
yum install mysql-devel

chkconfig mysqld on
service mysqld start
</pre>
</code>

<p class="m_0">スタートさせたら最初はパスワードが設定されていないのでmysqlに接続してからクエリを投げてパスワードを設定する。</p>

<code class="command">
<pre>
// 1.rootで入る
mysql -uroot

// 2.パスワードを設定するクエリを投げる
set PASSWORD for root@localhost = PASSWORD(&#039;root&#039;);

// 3.mysqlをログアウトする
exit
</pre>
</code>
<p class="m_0">ログアウトしたら先ほど登録したパスワードでmysqlにログインしてみる。</p>

<code class="command">
<pre>
mysql -uroot -proot

exit
</pre>
</code>

<p>ここら辺はすんなりいくと思いますので、これでdbサーバ構築の章は終わります。</p>

<h2 class="heading">PHPインストール</h2>
<p>特にPHPじゃなきゃいけない訳ではないのですが、個人的にFuelPHPというフレームワークを利用したくてPHPを入れてみる事にしました。それ以外にもPHPは簡単な記述で動きますので軽い感じの事をしたい時は便利です。</p>


<p class="m_0">yumでlistを確認してみると管理しているPHPは現時点(2013.12.20)で5.3.3でした。</p>
<code class="command">
<pre>
yum list PHP*
</pre>
</code>

<p>折角なので、もっと新しいバージョンをインストールしてみましょう。</p>
<p class="m_0">remi(Les RPM de Remi - Repository)のrpmパッケージを使います。</p>
<p class="m_0"><a href="http://rpms.famillecollet.com/" target="_blank">http://rpms.famillecollet.com/</a></p>


<code class="command">
<pre>
// epel リポジトリ追加(32ビット版はx86_64をi386に変更するらしい、未検証)
rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
</pre>
</code>

<code class="command">
<pre>
// remi リポジトリ追加
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
</pre>
</code>


<p class="m_0">追加しましたら確認してみましょう。</p>

<code class="command">
<pre>
yum list --enablerepo=remi --enablerepo=remi-php55 | grep php
</pre>
</code>

<p>膨大な数が追加されていますね。phpは一番上にあります。5.5.7という新しさになりました。リリースされてまだ8日しか経っていません(この文章を書いている時点で)新しすぎてバグが心配な方は最新の安定板と言われている5.5をインストールする事をお勧め致します。</p>

<p class="m_0">それではインストールしたいパッケージを選んで一気にインストールしてみましょう。</p>




<code class="command">
<pre>
// 今回インストールするパッケージ
// php、php-devel、php-mbstring、php-mcrypt、php-mysql
// php-phpunit-PHPUnit、php-pecl-xdebug、php-gd

// インストール
yum install --enablerepo=remi --enablerepo=remi-php55 php php-devel php-mbstring php-mcrypt php-mysql php-phpunit-PHPUnit php-pecl-xdebug php-gd
</pre>
</code>

<p class="m_0">インストールが終わりましたらPHPのバージョンを確認してみましょう。</p>

<code class="command">
<pre>
php --version
</pre>
</code>

<p>無事に5.5.7になっていると思います。これで新しい機能をガシガシ使えるようになりました。</p>



<h3 class="heading b_b_1">php.iniの設定</h3>



<p>このままのphp.iniの設定だと使いづらいと思いますので、ボクなりのセッティングしたところを載せときますので参考にして編集して下さい。</p>
<div class="html_tab">php.ini</div>
<pre class="brush: html; light:true; tab-size: 2;">


#----
#色々
#----
# PHPが扱うメモリ
memory_limit = 128M
↓
memory_limit = 512M
406行目あたり

# エラーレベル
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
↓
error_reporting = E_ALL
462行目あたり

# エラー表示
display_errors = Off
↓
display_errors = Off(ローカルならOnで本番環境ならOff)
479行目あたり

# 諸々の送信出来るサイズ
post_max_size = 8M
↓
post_max_size = 128M
673行目あたり

# デフォルト文字コード
;default_charset = "UTF-8"
↓
default_charset = "UTF-8"
693行目あたり

# アップロード出来るサイズ
upload_max_filesize = 2M
↓
upload_max_filesize = 64M
805行目あたり

# 場所(FuelPHPを導入する時にこれを設定していないとFuelPHPインストールする時点でエラーになる。)
;date.timezone =
↓
date.timezone = "Asia/Tokyo"
883行目あたり


#---------
#session系
#---------
# GCプロセスが 始動する間隔(1/1000)
session.gc_divisor = 1000(少し古いPHPだと100なのだが、5.5.7は1000になってた。)
↓
session.gc_divisor = 1000
1430行目あたり

# セッションが消されるまでの時間(秒単位)
session.gc_maxlifetime = 1440
↓
session.gc_maxlifetime = 4320

# キャッシュされたセッションページの有効期間(分単位)
session.cache_expire = 180
↓
session.cache_expire = 540


#--------------
#マルチバイト系
#--------------
# 日本だと明示的に設定
;mbstring.language = Japanese
↓
mbstring.language = Japanese
1665行目あたり

# 文字コード指定
;mbstring.internal_encoding = UTF-8
↓
mbstring.internal_encoding = UTF-8
1671行目あたり

# 入力される文字コード
;mbstring.http_input = UTF-8
↓
mbstring.http_input = UTF-8

# 文字コードを変換しないようにする
;mbstring.http_output = pass
↓
mbstring.http_output = pass

# 内部文字エンコーディングへの変換を無効にする
;mbstring.encoding_translation = Off
↓
mbstring.encoding_translation = Off
</pre>


<p class="m_t_30">php.iniの設定はこんな感じでしょうか。</p>



<p>これでPHPインストールの章を終わりたいと思います。</p>

<h2 class="heading">phpMyAdminインストール</h2>
<p>phpもインストール完了したという事でphoMyAdminの方もインストールしたいと思います。</p>

<code class="command">
<pre>
yum --enablerepo=epel install phpMyAdmin
</pre>
</code>

<p class="m_0">インストールが完了しましたら、確認してみましょうか。</p>
<code class="command">
<pre>
rpm -ql phpMyAdmin
</pre>
</code>

<h3 class="heading b_b_1">phpMyAdmin.confの設定</h3>


<p class="m_0">ずらずらとインストールされた事が確認出来ましたね、その一番上から3行目あたりまでが設定ファイルですので設定を変えていきます。</p>

<code class="command">
<pre>
vi /etc/httpd/conf.d/phpMyAdmin.conf
</pre>
</code>

<div class="html_tab">phpMyAdmin.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">

まず、デフォルトで
aaa.com/phpMyAdmin/
aaa.com/phpmyadmin/

でアクセス出来るようになってしまっているのでエイリアスの変更を(大事)。

Alias /phpMyAdmin /usr/share/phpMyAdmin
Alias /phpmyadmin /usr/share/phpMyAdmin
を削除かコメントアウトしていただき

Alias /[パスを自由設定] /usr/share/phpMyAdmin

としましょう。

名前は長ければ長い程良いとは思いますが、忘れない程度の名前にする事が大事です。


最後にアクセス出来るIPを設定をします。
厳しくするなら家&会社のIPアドレスのみなど制限をかけた方が良いかもしれません。
ここでは全ての人が入れるように設定します。(ログイン画面に)
変更する点は2点です。

&lt;Directory /usr/share/phpMyAdmin/&gt;
   &lt;IfModule mod_authz_core.c&gt;
     # Apache 2.4
     &lt;RequireAny&gt;
       Require ip 127.0.0.1
       Require ip ::1
     &lt;/RequireAny&gt;
   &lt;/IfModule&gt;
   &lt;IfModule !mod_authz_core.c&gt;
     # Apache 2.2
     Order Deny,Allow
     Deny from All
     Allow from 127.0.0.1
     Allow from ::1
   &lt;/IfModule&gt;
&lt;/Directory&gt;
↓
&lt;Directory /usr/share/phpMyAdmin/&gt;
   &lt;IfModule mod_authz_core.c&gt;
     # Apache 2.4
     &lt;RequireAny&gt;
       Require ip 127.0.0.1
       Require ip ::1
     &lt;/RequireAny&gt;
   &lt;/IfModule&gt;
   &lt;IfModule !mod_authz_core.c&gt;
     # Apache 2.2
     Order Deny,Allow
     Deny from All
     Allow from All
   &lt;/IfModule&gt;
&lt;/Directory&gt;

Allow from 127.0.0.1
↓
Allow from All
に変更して

Allow from ::1
を削除して下さい。

これで全てのバーチャルホストでphpMyAdminを参照出来るようになりました。
</pre>



<p class="m_t_30 m_0">次はログイン画面で認証する時にどの認証にするかの設定を行います。デフォルトだとベーシック認証になっていますのでここではクッキー認証に切り替えたいと思います。</p>


<code class="command">
<pre>
vi /etc/phpMyAdmin/config.inc.php
</pre>
</code>



<div class="html_tab">config.inc.php</div>
<pre class="brush: html; light:true; tab-size: 2;">
$cfg[&#039;Servers&#039;][$i][&#039;auth_type&#039;]     = &#039;http&#039;;
↓
$cfg[&#039;Servers&#039;][$i][&#039;auth_type&#039;]     = &#039;cookie&#039;;

これでcookie認証に切り替わります。
</pre>

<p class="m_t_30 m_0">これでphpMyAdminのインストールと設定は完了です。最後にhhtpdを再起動して設定の読み込みをさせましょう。</p>


<code class="command">
<pre>
service httpd restart
</pre>
</code>

<p>以上でphpMyAdminの章を終わりにさせて頂きます。</p>


<h2 class="heading">メールサーバ構築</h2>
<p>webサービスを公開すればメールアドレスも必要になってきますので、メールサーバも構築していきます。この記事の中で一番の難関ですので構築は慎重に行いましょう。</p>

<h3 class="heading b_b_1">Dovecotインストール</h3>

<p class="m_0">初めに受信系を管理をするdovecotをインストールします。</p>


<code class="command">
<pre>
yum  install dovecot
</pre>
</code>

<h3 class="heading b_b_1">Dovecotの設定</h3>


<p class="m_0">無事、インストール出来ましたら個別にconfの設定を変えていきます。最初はプロトロルの設定を変更をします。</p>

<code class="command">
<pre>
vi /etc/dovecot/dovecot.conf
</pre>
</code>

<div class="html_tab">dovecot.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">
プロトコルの設定
#protocols = imap pop3 lmtp
↓
protocols = imap pop3
</pre>

<p class="m_t_60 m_0">次は認証系設定を変えていきます。</p>

<code class="command">
<pre>
vi /etc/dovecot/conf.d/10-auth.conf
</pre>
</code>


<div class="html_tab">10-auth.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">

平文での認証を許可を不許可にする
#disable_plaintext_auth = yes
↓
disable_plaintext_auth = no

認証方式の設定
auth_mechanisms = plain
↓
auth_mechanisms = plain login
</pre>

<p class="m_t_60 m_0">メールボックスの形式を指定。</p>


<code class="command">
<pre>
vi /etc/dovecot/conf.d/10-mail.conf
</pre>
</code>
<div class="html_tab">10-mail.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">
メールボックスの形式を指定
#mail_location =
↓
mail_location = maildir:~/Maildir
</pre>


<p class="m_t_60 m_0">最後にpostfixからの認証要求を受け付けるようにしときましょう。</p>


<code class="command">
<pre>
vi /etc/dovecot/conf.d/10-master.conf
</pre>
</code>

<div class="html_tab">10-master.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">
Postfixからの認証要求の受付
#unix_listener /var/spool/postfix/private/auth {
#  mode = 0666
#}
↓
unix_listener /var/spool/postfix/private/auth {
 mode = 0660
 user = postfix
 group = postfix
}
</pre>

<p class="m_t_60 m_0">一通り設定が完了しましたらdovecotの起動と自動起動onに。</p>

<code class="command">
<pre>
/etc/rc.d/init.d/dovecot start
chkconfig dovecot on
</pre>
</code>


<h3 class="heading b_b_1">Postfixの基本構築</h3>

<p>次に送信系の構築を行いたいと思います。postfixに関しては最初から入っていると思いますのでインストールは省略します。もしも入っていない場合はyumでインストールをお願い致します。なお、変更する点が多いので間違えないように気をつけましょう。</p>

<p class="m_0">まず初めにmain.cfを編集をしていきます。</p>

<code class="command">
<pre>
vi /etc/postfix/main.cf
</pre>
</code>

<div class="html_tab">main.cf</div>
<pre class="brush: html; light:true; tab-size: 2;">
ここでは例で webprofile.me というドメインを使って説明しています。実際に変更する時はご自分のドメイン名を記述してください。


# ホスト指定
myhostname = mail.webprofile.me

# ドメイン名指定
mydomain = webprofile.me

# メール送信時の送信元メールアドレスの@以降に付加するドメイン名を指定
myorigin = $mydomain

# 外部からのメール受信を許可するネットワークインターフェースを指定
inet_interfaces = all

# メールを受け付ける宛先指定
# 複数のドメインを設定している場合は追加していく
mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain

# メールボックス形式を指定
home_mailbox = Maildir/

# メールサーバーソフト名をごまかします
smtpd_banner = $myhostname ESMTP unknown



# 末行に追加
# どんなユーザーがいるのかを探れないようにする
disable_vrfy_command = yes

# sasl認証に対応していないメーラを拒否
smtpd_sasl_auth_enable = yes

# sasl認証を使うよう設定
smtpd_sasl_auth_enable = yes

# sasl関連設定
smtpd_sasl_authenticated_header = yes
smtpd_sasl_path = private/auth
smtpd_sasl_security_options = noanonymous
smtpd_sasl_local_domain = $myhostname
smtpd_sasl_type = dovecot
smtpd_recipient_restrictions =
  permit_mynetworks,
  permit_sasl_authenticated,
  reject_unauth_destination

# Dovecotと同じ認証を使用する
smtpd_sasl_type = dovecot
</pre>

<p class="m_t_30 m_0">cfの設定が終わりましたらpostfixを起動してsaslを自動起動onにしてから起動させましょう。</p>

<code class="command">
<pre>
chkconfig postfix on
chkconfig saslauthd on
/etc/rc.d/init.d/saslauthd start
</pre>
</code>

<h3 class="heading b_b_1">サーバの秘密鍵を作成</h3>


<p>次はメールサーバとの通信をSSLを使って暗号化する設定や鍵を作っていきます。</p>

<p class="m_0">まず、opensslというコマンドがあるか調べます。(大抵デフォルトで入っているかと思いますが)</p>

<code class="command">
<pre>
man openssl
</pre>
</code>

<p class="m_0">コマンドがあったら説明がずらずらと流れるのでqを押して戻ります。</p>
<p class="m_0">ない場合は No manual entry for openssl と表示されますのでインストールしましょう。</p>
<code class="command">
<pre>
yum install openssl
</pre>
</code>


<p>インストールが終わりましたら暗号鍵の置き場所として、/etc/pki/tls/certs が使われているらしいのでそこへ移動して server.key というkeyを2048の長さで作成していきます。</p>

<p class="m_0">keyを作成する時にpassを設定しろと言われますが、後からpassを消すので簡単なpassを設定しといて下さい。</p>
<code class="command">
<pre>
cd /etc/pki/tls/certs
openssl genrsa -des3 -out server.key 2048
</pre>
</code>

<p class="m_0">これでserver.keyという名前でRSAの秘密鍵が作成されました。では、早速鍵のpassを解除をやりましょう。最後にserver.keyをroot以外見れないようにパーミッションを変更しておきます。</p>

<code class="command">
<pre>
openssl rsa -in server.key -out server.key
chmod 400 server.key
</pre>
</code>



<h3 class="heading b_b_1">証明書の作成</h3>


<p>ここで休憩がてら、自己認証の事を詳しく知る為に引用を載せときます。</p>


<h3 class="heading b_b_1">認証マフィアの説明とメールサーバでは自己認証で問題ない理由。</h3>
<blockquote cite="http://www.mainsystem.net/cgi-bin/sdoc.cgi?page=personal/book/&file_num=2536&article_num=5991">
<p>RSA方式は秘密鍵と公開鍵のペアで暗号複合を行いますので、公開鍵を作成する必要があります。この公開鍵と、鍵の作成者の名前などの識別情報、そしてこの鍵がちゃんと本人によって作成されたことの認証をセットにしたものを公開鍵証明書、又は単に証明書と呼んでいます。</p>

<p>鍵がちゃんと本人が作成したものであることを認証する者を認証局(CA:Certificate Authority)といい、信頼できる第三者機関（TTP:Trusted Third Party)が行う場合と、本人が自ら行う自己認証があります。</p>

<p>このTTPによる認証は、法外な料金を要求するため認証マフィアと呼ばれていますが、オンラインショッピングサイトのように「信用」が不可欠な場合は、やむを得ず法外な料金を支払ってTTPによる認証を受けざるを得ません。そうしないと、ブラウザから「このサイトの証明書は信頼できる第三者機関によって認証されたものではありません」などど、あたかも詐欺サイトであるかのようなメッセージを出されてしまします。</p>

<p class="m_0">しかし、メールサーバーの場合は利用する人があらかじめ決まっていて詐欺サイトでないことを知っているわけですから、自己認証でなんら差支えありません。ということで、ここでは当然に自己認証の証明書を作成します。</p>
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://www.mainsystem.net/cgi-bin/sdoc.cgi?page=personal/book/&file_num=2536&article_num=5991">Linux自習室 - サーバーを使い倒す！ - メールサーバーを暗号化</a></cite></p>


<p>中々勉強になる文章ですね。では、なんとなくわかったという事で作業を進めて参りましょう。先ほどの /etc/pki/tls/certs に場所にいますか？いなかったらもう一度 cd で飛んで下さい。</p>

<p class="m_0">公開鍵証明書の作成は openssl req コマンドを使用します。 </p>

<code class="command">
<pre>
openssl req -new -x509 -days 3650 -key server.key -out mail.crt
</pre>
</code>


<p class="m_0">-new は新規に証明書の作成を行うオプションで</p>
<p class="m_0">-x509 は証明書の形式で、現在使用されているx.509形式を指定。</p>
<p class="m_0">-days は証明書の有効期限で、約１０年を指定。</p>
<p class="m_0">-key は使用する秘密鍵で、これに対応する公開鍵が証明書の中に作成されます。</p>
<p class="m_0">-out は作成される証明書のファイル名です。</p>


<p>なお、このコマンドを実行すると鍵作成者の識別情報の入力を求められますので英文で入録します。自分だけが使うのであれば適当でも問題ありません。</p>
<p>作業が終わると、mail.crtという公開鍵証明書が作成されます。</p>


<h3 class="heading b_b_1">PostfixのSSL暗号化設定</h3>

<p>先ほど作成した鍵を使う為にSSL暗号化設定を行います。</p>
<p class="m_0">先にmain.cfの方へ追加を書き足しましょう。</p>


<code class="command">
<pre>
vi /etc/postfix/main.cf
</pre>
</code>

<div class="html_tab">main.cf</div>
<pre class="brush: html; light:true; tab-size: 2;">

# 末行に追加
smtpd_use_tls = yes
smtpd_tls_cert_file = /etc/pki/tls/certs/mail.crt
smtpd_tls_key_file = /etc/pki/tls/certs/server.key
smtpd_tls_session_cache_database = btree:/etc/postfix/smtpd_scache
smtpd_tls_session_cache_timeout = 86400s
</pre>

<p class="m_t_30 m_0">次にmaster.cfも変更する場所がありますので変えていきます。</p>

<code class="command">
<pre>
vi /etc/postfix/master.cf
</pre>
</code>




<div class="html_tab">master.cf</div>
<pre class="brush: html; light:true; tab-size: 2;">

# submissionを使う
# コメントを外す
#submission inet n       -       n       -       -       smtpd
↓
submission inet n       -       n       -       -       smtpd
#  -o smtpd_sasl_auth_enable=yes
↓
  -o smtpd_sasl_auth_enable=yes

# smtpsを使う
# コメントを外す
# smtps     inet  n       -       n       -       -       smtpd
↓
smtps     inet  n       -       n       -       -       smtpd
#  -o smtpd_tls_wrappermode=yes
#  -o smtpd_sasl_auth_enable=yes
↓
  -o smtpd_tls_wrappermode=yes
  -o smtpd_sasl_auth_enable=yes
</pre>


<h3 class="m_t_30 heading b_b_1">DovecotのSSL暗号化設定</h3>


<p class="m_0">Dovecotの方もssl関連の追加をしていきます。</p>


<code class="command">
<pre>
vi /etc/dovecot/conf.d/10-ssl.conf
</pre>
</code>


<div class="html_tab">10-ssl.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">

# コメントを外す
#ssl = yes
↓
ssl = yes

# 秘密鍵と公開鍵証明書の設定
ssl_cert = &lt;/etc/pki/dovecot/certs/dovecot.pem
ssl_key = &lt;/etc/pki/dovecot/private/dovecot.pem
↓
ssl_cert = &lt;/etc/pki/tls/certs/mail.crt
ssl_key = &lt;/etc/pki/tls/certs/server.key

</pre>


<p class="m_t_30 m_0">設定が終わりましたらこれでメールサーバ構築はひとまず完了です。最後にpostfixとdovecotの再起動を行い設定を通しましょう。</p>
<code class="command">
<pre>
service postfix restart
service dovecot restart
</pre>
</code>


<p>長い長い設定が終わったところですが、まだ動作確認を終えていないので次の章でメールの動作確認を致します。</p>

<h2 class="heading">ユーザー作成とメール動作確認</h2>

<p>ここの章ではroot以外にユーザーを作成して、そのユーザーのメールアドレスでメール動作確認を行いたいと思います。なお、メールクライアントソフトはMacにデフォルトで入っている メール というソフトで行います。</p>


<h3 class="heading b_b_1">ユーザーを作成した時に自動でユーザーフォルダ直下にMaildirフォルダ作成する</h3>

<p class="m_0">まぁ、そのまんまなのですが、ユーザーを作成した時に最初からMaildirフォルダが生成されたら楽という事でユーザーを作成する前に下準備を行いましょう。</p>

<code class="command">
<pre>
// 新規ユーザ追加時に自動でMaildir形式メールボックス作成
mkdir -p /etc/skel/Maildir/{new,cur,tmp}

// メールボックスパーミッション設定
chmod -R 700 /etc/skel/Maildir/
</pre>
</code>

<h3 class="heading b_b_1">ユーザー作成</h3>

<p class="m_0">下準備も完了しましたので、早速ユーザーを作成していきます。</p>
<code class="command">
<pre>
// ユーザー作成
useradd [ユーザーの名前]

// パスワード設定
passwd [ユーザーの名前]
</pre>
</code>

<h3 class="heading b_b_1">メール動作確認 & メールクライアント設定</h3>

<p class="m_0">ではでは、全ての準備がようやく整った所でメール動作確認を行いたいと思います。</p>
<p class="m_0">作業に取り掛かる前にコマンドで動的にエラーを吐き出すように下準備を行います。</p>

<code class="command">
<pre>
// ログを常時表示 メールサーバ構築する時に重宝する
tail -f /var/log/maillog
</pre>
</code>

<p>これで自動的にコマンドの画面にメールログが吐き出されるようになりますので、このログを見ながら動作確認を行っていきます。</p>



<p>では、Macのメールにてメールアドレス設定を行いましょう。</p>



<p class="m_0">今回のサーバ設定は</p>
<p class="m_0">ドメイン：blogreeder.com</p>
<p class="m_0">ユーザー：article</p>
<p>で、やらせていただきましたが、実際にする時は各自自分の設定で行って下さい。</p>

<p class="m_0"><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_253.jpg" width="640" height="400" alt="メールクライアントアプリ 設定画面 アカウントを追加" title="メールクライアントアプリ 設定画面 アカウントを追加"></p>

<p>↓</p>

<p class="m_0"><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_254.jpg" width="640" height="400" alt="メールクライアントアプリ 設定画面 受信用メールサーバ" title="メールクライアントアプリ 設定画面 受信用メールサーバ"></p>

<p>↓</p>

<p class="m_0"><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_255.jpg" width="640" height="400" alt="メールクライアントアプリ 設定画面 送信用メールサーバ" title="メールクライアントアプリ 設定画面 送信用メールサーバ"></p>

<p>↓</p>

<p><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_256.jpg" width="640" height="400" alt="メールクライアントアプリ 設定画面 アカウントの概要" title="メールクライアントアプリ 設定画面 アカウントの概要"></p>



<p>メール設定をしている内にmaillogが吐き出されているかと思いますので確認して下さい。</p>


<p>上記の構築を完璧にこなしていれば、おそらくですが接続は出来ている筈なので次のステップに進みます。なお、エラーが出て接続出来ない方は大変申し訳ございませんが、エラーログをコピペする等してググって下さい。</p>


<p>接続出来ましたら一度メールアプリを落として、もう一度アプリを立ち上げて下さい。そうしますと識別情報を確認出来ませんとポップアップが現れますので、常に信頼にチェックを入れまして接続をして下さい。これでもうポップアップが現れない筈です。</p>


<p><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_257.jpg" width="640" height="400" alt="メールクライアントアプリ 設定画面 証明書を検証" title="メールクライアントアプリ 設定画面 証明書を検証"></p>

<p>同じくメールを初めて送信する時も出て来ますので、常に信頼をチェックして接続して下さい。</p>


<p>最後に、ボクがこのメールサーバを構築するのにドハまり(一週間...)してしまいましたので、どこでつまづいてしまったのかを忘備録として残しておきます。</p>

<ul>
	<li>iptablesでポートを開いていなかった。</li>
	<li>ユーザー直下フォルダ(Maildir)のパーミッションが間違っていた。</li>
	<li>元から設定があるユーザー名だと(infoとか)<br>エイリアスを変更しないとメールが届かない。</li>
	<li>お名前.comVPS(KVM)を借りて15日間無料期間だと<br>そもそも25番ポートをお名前.comが禁止していた。</li>
</ul>

<h2 class="heading">NTPサーバ構築</h2>
<p>NTPサーバはサーバ内の時間を常に世界と合わせるという仕事が出来ます。時間がズレていると様々な弊害や予期せぬバグを生む事になりかねないのでしっかり合わせていきましょう。</p>


<h3 class="heading b_b_1">NTPインストール</h3>
<p class="m_0">初めにNTPをインストールします。</p>

<code class="command">
<pre>
yum install ntp
</pre>
</code>

<h3 class="heading b_b_1">手動で時間を合わせる</h3>

<blockquote cite="http://www.mainsystem.net/cgi-bin/sdoc.cgi?page=personal/book/&file_num=2536&article_num=5716">
<p class="m_0">NTPサーバー（ntpd）を起動する際に、大幅に時間がずれていると、NTPサーバーが起動できないので、まずは手動で時間を合わせます。手動で時間合わせをするコマンドは、ntpdateで、これに正しい時間を教えてくれるサーバーを指定して実行します。時間を合わせる元のサーバーは、NICT（独立行政法人・情報通信研究機構）のNTPサーバーにします。</p>
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://www.mainsystem.net/cgi-bin/sdoc.cgi?page=personal/book/&file_num=2536&article_num=5716">Linux自習室 - サーバーを使い倒す！ - 常に正確な時間に合わせる</a></cite></p>


<p class="m_0">という事らしいので、先ずは時間を合わせてみましょう。</p>

<code class="command">
<pre>
ntpdate ntp.nict.jp
</pre>
</code>


<h3 class="heading b_b_1">NTPサーバの設定</h3>

<p class="m_0">大体の時間を合わせましたら次は設定を行います。</p>

<code class="command">
<pre>
vi /etc/ntp.conf
</pre>
</code>

<div class="html_tab">ntp.conf</div>
<pre class="brush: html; light:true; tab-size: 2;">

内部からの時刻同期を許可
#restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap
↓
restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap


こっちのサーバの方が正確な時間を取得出来るので変更する
server 0.centos.pool.ntp.org iburst
server 1.centos.pool.ntp.org iburst
server 2.centos.pool.ntp.org iburst
server 3.centos.pool.ntp.org iburst
↓
server ntp.nict.jp iburst
server ntp.jst.mfeed.ad.jp iburst
の二行に変更する

</pre>



<p class="m_t_30 m_0">変更を保存しましたら、ntpdをスタートして自動起動onにしましょう。</p>

<code class="command">
<pre>
service ntpd start
chkconfig --level 3 ntpd on 
</pre>
</code>

<h3 class="heading b_b_1">同期の確認</h3>

<p class="m_0">同期の確認をするにはntpqでオプション-pを付けて確認出来ます。</p>

<code class="command">
<pre>
ntpq -p
</pre>
</code>


<blockquote cite="http://www.mainsystem.net/cgi-bin/sdoc.cgi?page=personal/book/&file_num=2536&article_num=5716">
<p>ただし、起動直後はすぐには同期されませんので、１０分程度たってから確認すると同期されていることが確認できます。同期の確認は、ntpqコマンドに-pオプションと付けて行います。</p>

<p>remoteの欄が同期しているサーバーで、先頭に*（アスタリスク）が付いているサーバーが同期しているサーバーです。その他に、+もいつでも接続可能なサーバーとしてマークされているものです。この欄が空白のサーバーは接続不可です。ただし、ntpdが起動して間もないときは、接続テストが完了しておらず、すべて空白（接続不可）となっています。</p>


<p>その右側の欄のデータのうち、重要なものの意味は次のとおりです。</p>

<p class="m_0">st → サーバーが第何階層か</p>
<p class="m_0">when → 最後のパケットを受け取ってからの時間（単位：秒）</p>
<p class="m_0">poll → ポーリング間隔（単位：秒）</p>
<p class="m_0">delay → 平均遅延時間（単位：ミリ秒）</p>
<p class="m_0">offset → サーバーとの時間誤差（単位：ミリ秒）</p>
<p class="m_0">jitter → 時間のバラつき </p>

</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://www.mainsystem.net/cgi-bin/sdoc.cgi?page=personal/book/&file_num=2536&article_num=5716">Linux自習室 - サーバーを使い倒す！ - 常に正確な時間に合わせる</a></cite></p>

<h2 class="heading">参考にしたサイト</h2>

<p>今回、この記事を書く為に参考になったサイトを載せときます。</p>

<h3 class="heading b_b_1">全体で勉強になったサイト</h3>
<p><a href="http://www.mainsystem.net/cgi-bin/sdoc.cgi?page=personal/book/&file_num=2536&article_num=2594" target="_blank">Linux自習室 - サーバーを使い倒す！ - VPSをゲット！</a></p>

<p><a href="http://www.karakaram.com/onamae-com-vps-index" target="_blank">お名前.comのVPSに引越しました。引越し手順、他社 VPS との比較など | karakaram-blog</a></p>

<p><a href="http://server-setting.info/contents-index/centos-index" target="_blank">CentOSの設定(目次) | レンタルサーバー・自宅サーバー設定・構築のヒント</a></p>

<p><a href="http://blog.aroundit.net/vps-lamp/" target="_blank">さくらのVPS　-初期設定からLAMP環境導入まで-</a></p>


<h3 class="heading b_b_1">sshで勉強になったサイト</h3>
<p><a href="http://www.adminweb.jp/web-service/ssh/" target="_blank">SSHを使ったリモートアクセス(さくらのVPS) - Webサービスの始め方</a></p>

<h3 class="heading b_b_1">iptablesで勉強になったサイト</h3>
<p><a href="http://www13.big.or.jp/~rinken/computer/server/centos/iptables.html" target="_blank">サーバーを作るたびにやる iptables の設定</a></p>

<p><a href="http://dream.jp/vps/esp/manual/mnl_security_04.html" target="_blank">iptablesの設定方法</a></p>

<h3 class="heading b_b_1">vsftpdで勉強になったサイト</h3>
<p><a href="http://d.hatena.ne.jp/sin-j/20080811/1218431281" target="_blank">vsftpdにrootで接続する - ワレココニイル。</a></p>

<p><a href="http://www.nina.jp/server/redhat/vsftpd/vsftpd.conf.html" target="_blank">vsftpdの設定（vsftpd.conf）</a></p>



<h3 class="heading b_b_1">httpdで勉強になったサイト</h3>
<p><a href="http://www.obenri.com/_webserver/virtual_host.html" target="_blank">◇バーチャルホストの設定◇初心者のためのLinuxサーバー構築講座(CentOS 自宅サーバー対応)☆お便利サーバー.com☆</a></p>

<p><a href="http://www.nina.jp/server/redhat/httpd/httpd_conf.html" target="_blank">もっとhttpd.confの設定</a></p>

<p><a href="http://centossrv.com/apache-virtualhost.shtml" target="_blank">バーチャルホスト設定(Apache)</a></p>

<p><a href="http://kazmax.zpp.jp/apache/apache5.html" target="_blank">apache2.2 バーチャルホストの設定 後編</a></p>



<h3 class="heading b_b_1">メール全般で勉強になったサイト</h3>

<p><a href="http://web.arena.ne.jp/support/vps-cloud/manual/vps/centos6/postfix.html" target="_blank">メールサーバ　構築</a></p>

<p><a href="http://tipszone.jp/20120521_mail_server/" target="_blank">さくらのVPSの設定 - メールサーバーの構築</a></p>

<p><a href="http://centossrv.com/postfix.shtml" target="_blank">メールサーバー構築(Postfix+Dovecot)</a></p>

<h4>Postfix関連</h4>

<p><a href="http://wiki.livedoor.jp/lucykmac601/d/Postfix%B4%F0%CB%DC%C0%DF%C4%EA" target="_blank">Postfix基本設定 - 備忘録として - Seesaa Wiki（ウィキ）</a></p>

<p><a href="http://blog.syuhari.jp/archives/791" target="_blank">Postfix でバーチャルドメインの設定メモ | Sun Limited Mt.</a></p>

<p><a href="http://www.scrawl.jp/wiki/index.php/Postfix初期設定" target="_blank">Postfix初期設定 - ITらくがき</a></p>

<p><a href="http://linux.kororo.jp/cont/server/postfix_virtual.php" target="_blank">Postfix で複数ドメインの管理</a></p>

<h4>Dovecot関連</h4>

<p><a href="http://www.sssc.cc/wiki/index.php?Dovecot2.x%2F%E8%A8%AD%E5%AE%9A" target="_blank">Dovecot2.x/設定</a></p>

<h4>エラー関連</h4>

<p><a href="http://d.hatena.ne.jp/a1102012/20120114/1326551178" target="_blank">fatal no SASL authentication mechanisms っていうエラー(メール関連)</a></p>
<p><a href="http://kajuhome.com/patio_thread/1118.shtml" target="_blank">はじめての自宅サーバ構築 - Fedora/CentOS - ( postfixでメールが全く送信出来ない。)</a></p>

<h3 class="heading b_b_1">yumで勉強になったサイト</h3>
<p><a href="http://higu.cr.chiba-u.jp/~hayasaki/fswiki/wiki.cgi/LinuxTips?page=yum_how2use" target="_blank">yum の使用方法</a></p>


<h3 class="heading b_b_1">PHPをアップデートする時に勉強になったサイト</h3>
<p><a href="http://qiita.com/pakiln/items/bcddcdd96e94dab96873" target="_blank">php5.5にする方法</a></p>

<h3 class="heading b_b_1">phpMyAdminをインストールする時に勉強になったサイト</h3>

<p><a href="http://blog.aroundit.net/vps-phpmyadmin/" target="_blank">さくらのVPS　-phpMyAdminのインストールと初期設定-</a></p>

<h2 class="heading">まとめ</h2>
<p>本来ならば章を切り分けて記事にしていく方が良いとは思ったのですが、忘備録として残して自分自身が1ページで全部乗っていたら便利だろうなーって考えて1記事で全てを載せました。</p>

<p>ただ、まだまだ構築していく部分は多くて、構築と検証が終わりましたら、随時追加していきたいと考えています。</p>

<p>個人の完全な忘備録として淡々とやり方を書いていますが、この記事を書く為に無駄に一つサーバを借りて検証を行いながら書きました。ですが、全部終わってみるとサーバ構築って楽しいなーってしみじみ感じてしまいます。本当ならば一人では到底出来ない事でしたが、今ではググればなんでも情報が出てくる時代です。誰でも頑張ればサーバ構築は出来るって事ですね。性能比較で考えれば普通のレンタルサーバよりも料金がかなり安くなるのでお勧め致します。</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2013-12-24_vps_construct_procedure_manual/
			</guid>
			<pubDate>Tue, 24 Dec 2013 11:59:34 +0900</pubDate>
			</item>
			<item>
			<title>2013年、フォントフリーサイトまとめをまとめてみた[保存版]</title>
			<link>
			http://programmerbox.com/2013-11-01_free_font_Install/
			</link>
			<description>
			<![CDATA[
			新しいフォントが無数に現れる時代になり、やはり情報と同じで多すぎると探しにくくなっています。そこでオススメのサイト2選を紹介しつつ、日本と海外のフォントポータルサイト...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>新しいフォントが無数に現れる時代になり、やはり情報と同じで多すぎると探しにくくなっています。そこでオススメのサイト2選を紹介しつつ、日本と海外のフォントポータルサイトや日本語フォントをメインに紹介している記事を集めてみました。</p>

<nav class="detail_press_index clearfix">
	<h2 id="s_0p"><span class="color">目次</span></h2>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">オススメの厳選サイト2選</span></li>
		<li class="n_2"><span class="scroll_btn">無料フォントポータルサイト</span>
			<ul class="nest">
				<li><span class="nest_number">2-1.</span><span class="scroll_btn">日本サイト</span></li>
				<li><span class="nest_number">2-2.</span><span class="scroll_btn">海外サイト</span></li>
			</ul>
		</li>
		<li class="n_3"><span class="scroll_btn">比較的新しいフォント紹介記事</span>
			<ul class="nest">
				<li><span class="nest_number">3-1.</span><span class="scroll_btn">イケてるフォント紹介記事</span></li>
				<li><span class="nest_number">3-2.</span><span class="scroll_btn">日本語フォント紹介記事</span></li>
				<li><span class="nest_number">3-3.</span><span class="scroll_btn">英語フォント紹介記事</span></li>
			</ul>
		</li>
		<li class="n_4"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>



<h2 class="heading">オススメの厳選サイト2選</h2>

<p>大体はこの2つのサイトでイケてるフォントは手に入りますので要チェックです。ですが、日本語のフォントがないので日本語のフォントをお探しならば目次の2-1や3-2を見て下さい。</p>




<h3>Fonts.com（SkyFonts）</h3>
<p class="m_0">
	<a target="_blank" href="http://www.fonts.com/ja/web-fonts/google">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_228.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.fonts.com/ja/web-fonts/google">Fonts.com（SkyFonts）</a>
</p>
<p>個人的に超お気に入りのサービスです。現在1123種類のフォントをダウンロード出来るようになっていますのでやってない方は是非是非、お気に入りのフォントをダウンロードしましょう。</p>


<blockquote cite="http://jp.techcrunch.com/2013/05/06/20130501google-brings-its-web-fonts-to-the-desktop/">
<p>GoogleのオープンソースWeb Fontsコレクションが、デスクトップでも利用できるようになっている（MacおよびWindows）。「どういうことなのだ」と混乱する方もいらっしゃることだろう。Web Fontsとはそもそも、ウェブ上で自由にいろいろなフォントを利用できるようにするために用意されたものだ。デスクトップで利用できるもなにも、既にきちんと表示されるようになっているはずだ。ただ、表示の際にはフォントのデータをダウンロードする必要があった。これを予め手元にダウンロードしておけば時間の短縮になるというわけだ。</p>

<p>今回の機能実装にあたりGoogleは、フォントビジネスを展開しているMonotypeのSkyFontsというツールを利用している。これを利用することにより、いったんダウンロードしたフォントに新たな文字が加わったり、何かしらの変更が加わった際には自動的に反映されるようになるのだそうだ。</p>
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://jp.techcrunch.com/2013/05/06/20130501google-brings-its-web-fonts-to-the-desktop/">Google、Monotypeとの提携によりWeb Fontsをデスクトップ用にも提供開始  |  TechCrunch Japan</a></cite></p>



<h3>Font Squirrel</h3>
<p class="m_0">
	<a target="_blank" href="http://www.fontsquirrel.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_229.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.fontsquirrel.com/">Font Squirrel</a>
</p>
<p>ここも新しめなフォントが集まっており、フラットデザインで役に立ちそうなフォントが多いので個人的にオススメです。</p>








<h2 class="heading">無料フォントポータルサイト</h2>
<p>今回紹介するポータルサイトは新しいサイトではありませんが、古い分フォントの量が多いのが特徴です。新しいフォントから古いフォントまで網羅していますので目的のフォントが見つかるかも知れません。</p>




<h3 class="heading b_b_1">日本サイト</h3>

<p>先ずは日本のサイトを紹介していきます。</p>



<h3>FFONTS（日本版）</h3>
<p class="m_0">
	<a target="_blank" href="http://jp.ffonts.net/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_230.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://jp.ffonts.net/">FFONTS（日本版）</a>
</p>
<p>日本語版があったので紹介を。フォントカテゴリーに「頭のおかしい フォント」「気が狂って フォント」などがあり面白いサイトです。（全く使えませんが・・）</p>


<h3>無料フリーフォント集　FREEフォントケンサク</h3>
<p class="m_0">
	<a target="_blank" href="http://cute-freefont.flop.jp/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_231.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://cute-freefont.flop.jp/">無料フリーフォント集　FREEフォントケンサク</a>
</p>
<p>フォントを作成しているサイトのフォントを載せていますので数が多いのが特徴ですね。</p>


<h3>gau+ | ガウプラ</h3>
<p class="m_0">
	<a target="_blank" href="http://www.graphicartsunit.com/gaupra/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_232.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.graphicartsunit.com/gaupra/">gau+ | ガウプラ</a>
</p>
<p>ポータルサイトではないのですが個人的に好きなので紹介したいと思います。サイト自体が可愛くていい感じです。フォントの方は英語14種類、カタカナ9種類あります。</p>




<h3>お得ＷＥＢ；無料フォント</h3>
<p class="m_0">
	<a target="_blank" href="http://www7.ocn.ne.jp/~otoku/free-font.htm">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_233.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www7.ocn.ne.jp/~otoku/free-font.htm">お得ＷＥＢ；無料フォント</a>
</p>
<p>このサイト自体アレなので、古いフォントサイトを紹介しているのかと思いきや前衛的なサイトばかりですので要チェックです。</p>









<h3 class="heading b_b_1">海外サイト</h3>

<p>次は海外サイトを。</p>



<h3>MacAppware</h3>
<p class="m_0">
	<a target="_blank" href="http://macappware.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_234.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://macappware.com/">MacAppware</a>
</p>
<p>基本有料のフォントなのですが、サイトの右上にある<strong>Free Fonts</strong>と書かれているボタンをクリックして面倒ですがメールアドレス等を入力し送信するとすぐにメールが来ますので、そのメールに書かれているURLをクリックしますと56個のフォントを一括ダウンロード出来ます。</p>




<h3>Fonts2u.com</h3>
<p class="m_0">
	<a target="_blank" href="http://ja.fonts2u.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_235.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://ja.fonts2u.com/">Fonts2u.com</a>
</p>
<p>こちらのサイトは海外なのですが複数の言語対応もしており、日本語でも閲覧出来るようになっていまして、フォントが探しやすくなっています。</p>

<h3>dafont.com</h3>
<p class="m_0">
	<a target="_blank" href="http://www.dafont.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_236.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.dafont.com/">dafont.com</a>
</p>
<p>日本語対応になっていませんが上記のサイトと似ているUIの為、直感的にフォントが何処にあるか、わかりやすいかと思います。</p>




<h3>1001 Fonts · Free Fonts Baby!</h3>
<p class="m_0">
	<a target="_blank" href="http://www.1001fonts.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_237.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.1001fonts.com/">1001 Fonts · Free Fonts Baby!</a>
</p>
<p>有名なサイトですが、少し古いフォントが多いなと感じました。大体全部見たのですが使えるのは新しいフォントから数えて350位までです。</p>















<h2 class="heading">比較的新しいフォント紹介記事</h2>

<p>ポータルサイトだけではなく、他のブログではどのように紹介されているか個人的に気になり、基本的にバズった記事を集めてみました。色んな角度から紹介していますので目的のフォントにたどり着ける確率は高いです。</p>


<h3 class="heading b_b_1">イケてるフォント紹介記事</h3>

<p>イケてるフォントを紹介している記事というかブログを紹介します。</p>


<h3>フォントPhotoshopVIP | PhotoshopVIP</h3>
<p class="m_0">
	<a target="_blank" href="http://photoshopvip.net/archives/tag/font">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_239.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://photoshopvip.net/archives/tag/font">フォントPhotoshopVIP | PhotoshopVIP</a>
</p>
<p>PhotoshopVIPさんのフログは多くの記事を書きカテゴリー分けしてるので、ここに行けば良いデザインのフォントに行けるようになっています。</p>




<h3 class="heading b_b_1">日本語フォント紹介記事</h3>
<p>上記で紹介したサイトは主に英語のフォントでしたので、日本語のフォントを紹介している記事をここでは紹介します。</p>


<h3>漢字が使えるフリーの和文フォント242種類をまとめてみた。 - buena suerte!</h3>
<p class="m_0">
	<a target="_blank" href="http://blog.livedoor.jp/cie/archives/52129474.html">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_240.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://blog.livedoor.jp/cie/archives/52129474.html">漢字が使えるフリーの和文フォント242種類をまとめてみた。 - buena suerte!</a>
</p>
<p>とりあえず、見やすいです。ただ記事が少し古いので記事で追記されているように、商用で使用する時は気をつけた方が良いですね。</p>



<h3>日本語フリーフォントまとめ最新版FreeFont一覧〜無料ダウンロード - デザインのブログ〜フォント作ったり素材作ったり</h3>
<p class="m_0">
	<a target="_blank" href="http://www.flopdesign.com/blog/font/65/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_241.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.flopdesign.com/blog/font/65/">日本語フリーフォントまとめ最新版FreeFont一覧〜無料ダウンロード - デザインのブログ〜フォント作ったり素材作ったり</a>
</p>
<p>割と新しめの記事ですので良い感じの日本語フォントを紹介しています。</p>



<h3>【デザイナー必見】最強の日本語フリーフォントのまとめ - NAVER まとめ</h3>
<p class="m_0">
	<a target="_blank" href="http://matome.naver.jp/odai/2130244832975388701">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_242.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://matome.naver.jp/odai/2130244832975388701">【デザイナー必見】最強の日本語フリーフォントのまとめ - NAVER まとめ</a>
</p>
<p>かなりまとめられいてますので数を見たい方はこちらを。</p>




<h3>漢字が使える！全部無料！日本語フォント41個【2013年最新版】</h3>
<p class="m_0">
	<a target="_blank" href="http://www.find-job.net/startup/41-japanese-free-fonts">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_243.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.find-job.net/startup/41-japanese-free-fonts">漢字が使える！全部無料！日本語フォント41個【2013年最新版】</a>
</p>
<p>殆ど引用している感じですが、見やすいので紹介を。</p>



<h3>日本語フリーフォントまとめ63個 &#8211; 2013年7月 | 男子ハック</h3>
<p class="m_0">
	<a target="_blank" href="http://www.danshihack.com/2013/07/21/junp/freefont_2013.html">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_244.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.danshihack.com/2013/07/21/junp/freefont_2013.html">日本語フリーフォントまとめ63個 &#8211; 2013年7月 | 男子ハック</a>
</p>
<p>マニアックなフォントも紹介していて見ていて楽しいです。一番最後に記述してある「参考サイト一覧」も必見です。</p>


<h3>perruche　～コンサル会社でHPを作っている人のBlog～　 - 漢字も使える74個の日本語フリーフォント　商用可（54）／商用不可（20）別</h3>
<p class="m_0">
	<a target="_blank" href="http://perruche15.blog134.fc2.com/blog-entry-36.html">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_245.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://perruche15.blog134.fc2.com/blog-entry-36.html">perruche　～コンサル会社でHPを作っている人のBlog～　 - 漢字も使える74個の日本語フリーフォント　商用可（54）／商用不可（20）別</a>
</p>
<p>もうかなり被って来ていますが、被ってないのもあるかもしれません。</p>


<h3>CoreDrive - どんなファイルも見たまま共有（日本語フリーフォント ）</h3>
<p class="m_0">
	<a target="_blank" href="https://coredrive.com/boards/font">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_246.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="https://coredrive.com/boards/font">CoreDrive - どんなファイルも見たまま共有（日本語フリーフォント ）</a>
</p>
<p>新しい形で紹介しています。このwebサービス面白いですね。</p>



<h3 class="heading b_b_1">英語フォント紹介記事</h3>

<p>最後に海外のフォントポータルサイトを紹介している記事を紹介します。</p>

<h3>21 Most Visited Free Fonts Site(21のポータルサイト紹介記事)</h3>
<p class="m_0">
	<a target="_blank" href="http://www.hongkiat.com/blog/21-most-visited-free-fonts-site/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_247.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a target="_blank" href="http://www.hongkiat.com/blog/21-most-visited-free-fonts-site/">21 Most Visited Free Fonts Site</a>
</p>
<p class="m_0">いつ書かれたかは不明ですが</p>
<p>知らなかったポータルサイトを紹介していましたので載せときます。</p>



<h2 class="heading">まとめ</h2>
<p>いかがだったでしょうか？フォントはデザインをする時に必ず必要になってきますので、多ければ多い程デザインのバリーションが広がるかもしれません。</p>
<p>フォント自体SkyFonts等で便利になっている分、他のサイトの需要が低くなって来ましたが</p>
<script type="text/javascript" src="//www.google.co.jp/trends/embed.js?hl=ja&q=%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88&geo=JP&cmpt=geo&content=1&cid=TIMESERIES_GRAPH_0&export=5&w=270&h=400"></script>

<p class="m_0">検索数で考えるとまだまだ需要はあるようです。</p>
<p>（執筆時点でフォントで月間33,100回日本で検索されています。）</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2013-11-01_free_font_Install/
			</guid>
			<pubDate>Fri, 01 Nov 2013 11:39:16 +0900</pubDate>
			</item>
			<item>
			<title>もうPCメガネは必要ない！？色温度調整アプリ「f.lux」を試してみたよ</title>
			<link>
			http://programmerbox.com/2013-10-07_f.lux_app_revue/
			</link>
			<description>
			<![CDATA[
			先日、初めて会った人に色温度調整アプリ「f.lux」を教えてもらい、数日間利用しています。そして、このアプリはフリーなのですが、イケてるんですよ!調べてみたら様々なブログ...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>先日、初めて会った人に色温度調整アプリ「f.lux」を教えてもらい、数日間利用しています。そして、このアプリはフリーなのですが、イケてるんですよ!調べてみたら様々なブログで紹介されてるんですが、見なかった事にしてさらな状態で記事を書いていきます。</p>
<nav class="detail_press_index clearfix">
	<h2 id="s_0p"><span class="color">目次</span></h2>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">f.luxとは？</span></li>
		<li class="n_2"><span class="scroll_btn">ダウンロード方法</span></li>
		<li class="n_3"><span class="scroll_btn">f.luxの使い方</span></li>
		<li class="n_4"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>
<h2 class="heading">f.luxとは？</h2>
<p class="m_0">PC画面の色温度を調整出来るMacのフリーアプリケーションです。機能としましては、現在いる場所を登録する事によって適切な調整も設定出来る機能のほか、時間の経過とともに画面の色を自動調整を行い目への刺激を極力防ぐ事が出来るようになります。</p>
<p><small>※UX自体を取り除く事はもちろん出来ませんのでUXを取り除く事を目的とするならば効果はありません。</small></p>

<p>ですが、<strong>ブルーライトを抑えられる</strong>ので目への刺激を和らげる事が出来ます。</p>



<h2 class="heading">ダウンロード方法</h2>

<h3>f.lux: software to make your life better</h3>
<p class="m_0">
	<a target="_blank" href="http://justgetflux.com/">
		<img class="press_screen_shot_image o_8 m_0" src="../assets/img/press/image/image_223.jpg" widht="640" height="400" alt="" title="">
	</a>
</p>
<p class="m_0">
	<a href="http://justgetflux.com/" target="_blank">f.lux: software to make your life better</a>
</p>
<p>f.luxのサイトにいきましたら「<em>Download f.lux</em>」をクリックしてダウンロード出来ます。</p>

<p>ダウンロードが完了しましたらzipを解凍して下さい。</p>
<p>解凍するとf.luxのappがダウンロードにありますのでクリックして起動しましょう。</p>
<p>初めてアプリを起動すると、アプリを移動しますか？と聞かれるのですが、ここで問題が一つあります。ボクの環境だと、<em>ここで移動しますとバグります</em>。（アプリアイコンがなかったり、アプリがゴミ箱に行ったり）なのでここはアプリの移動しないを選びましょう。</p>
<p><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_224.jpg" width="640" height="400" alt="" title=""></p>
<p>あとは自由にアプリをアプリケーションフォルダに入れてお好みでDockに入れたりして下さい。</p>

<h2 class="heading">f.luxの使い方</h2>
<p>ダウンロードが終わりましたら次はf.luxの使い方を説明します。</p>

<p class="m_0">f.luxを起動しますと、通常のアプリとは違ってDockで起動している事が確認出来ません。</p>
<p>f.luxはここから操作出来ます。</p>

<p><img class="press_98_image m_0" src="../assets/img/press/image/image_225.jpg" width="640" height="400" title="" alt=""></p>

<p>設定は完全にお好みなんですが、ボクはこんな感じにしました。</p>

<p><img class="press_mini_image m_0" src="../assets/img/press/image/image_226.jpg" width="640" height="400" alt="" title=""></p>

<h2 class="heading">まとめ</h2>
<p>使い続けた感想は目が疲れにくくなり、集中力が増したかのようにも思えます。一つ難点がありデザインをする時に解除をするのですが、その時の違和感というか違いにビックリして3分くらい目を慣れさせなければいけません。逆に考えればそのくらい通常の画面は目への刺激が強いという事になります。</p>
<p>ブラウジングしたりする時には有用ですので是非是非このアプリをためしましょー。</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2013-10-07_f.lux_app_revue/
			</guid>
			<pubDate>Mon, 07 Oct 2013 23:00:51 +0900</pubDate>
			</item>
			<item>
			<title>Mac標準アプリ「Automator」でファイル名を一括リネームする方法と作成したアクションを削除する方法</title>
			<link>
			http://programmerbox.com/2013-10-07_automator_image_batch_rename/
			</link>
			<description>
			<![CDATA[
			膨大にある画像を一括リネームする機会ってweb制作をしていると度々ありますよね？今回はそんな時に役立つ方法(macで)を紹介致します。
					Automatorはデフォルトでmacに入っ...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>膨大にある画像を一括リネームする機会ってweb制作をしていると度々ありますよね？今回はそんな時に役立つ方法(macで)を紹介致します。</p>
					<p>Automatorはデフォルトでmacに入っているアプリケーションです。これで何でも出来るらしいのですが、今回は画像を連番で一括リネームする事に焦点を当てたいと思います。</p>



<nav class="detail_press_index clearfix">
	<h2 id="s_0p"><span class="color">目次</span></h2>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">Automatorとは？</span></li>
		<li class="n_2"><span class="scroll_btn">Automatorアクションの作り方</span></li>
		<li class="n_3"><span class="scroll_btn">Automatorアクションの使い方</span></li>
		<li class="n_4"><span class="scroll_btn">Automatorアクションの削除の仕方</span></li>
		<li class="n_5"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>
<h2 class="heading">Automatorとは？</h2>
<p></p>

<blockquote cite="support.apple.com/kb/HT2488?viewlocale=ja_JP&locale=ja_JP">
<p>Automator は、簡単に作業を効率化できるパーソナル自動化アシスタントです。Automator を使えば、単純なドラッグアンドドロップ操作で「自動化レシピ」を作成し、実行できます。自動化レシピは、単純なタスクも複雑なタスクも、必要なときに必要な場所で実行してくれます。</p>
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="support.apple.com/kb/HT2488?viewlocale=ja_JP&locale=ja_JP">Mac 101：Automator</a></cite></p>



<h2 class="heading">Automatorアクションの作り方</h2>
<p>では、早速方法を説明して行きます。</p>

<p class="m_0">初めに<strong>Automator</strong>を開きましたら</p>
<p>下の画像のように<em>サービスを選択</em>して下さい。</p>

<h3></h3>

<p><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_212.jpg" width="640" height="400" alt="" title="">
</p>
<p class="m_0">次は下の画像の手順通り進んでください。</p>
<p class="m_0"><em>1.イメージファイルを選択</em></p>
<p class="m_0"><em>2.Finderを選択</em></p>
<p class="m_0"><em>3.ライブラリを選択</em></p>
<p class="m_0"><em>4.Finder 項目を求めるを選択</em></p>

<p><img class="press_98_image m_0" src="../assets/img/press/image/image_213.jpg" width="640" height="400" alt="" title=""></p>


<p>選択しましたら、次は<em>「Finder 項目の名前を変更」</em>をドラッグ&ドロップしましょー</p>

<p><img class="press_98_image m_0" src="../assets/img/press/image/image_214.jpg" width="640" height="400" alt="" title=""></p>

<p class="m_0">ドラッグ&ドロップをしますと</p>
<p>こんな感じのウィンドウが現れますのでお好みの設定にしましょう。</p>

<p><img class="press_98_image m_0" src="../assets/img/press/image/image_215.jpg" width="640" height="400" alt="" title=""></p>

<p>設定が完了しましたら、次の画像のように保存をして下さい。</p>

<p><img class="press_98_image m_0" src="../assets/img/press/image/image_216.jpg" width="640" height="400" alt="" title=""></p>

<p>これでアクションが完成しましたので、次はそのアクションの使い方を説明して行きます。</p>



<h2 class="heading">Automatorアクションの使い方</h2>
<p>作成したアクションを使うには下の画像のように画像ファイルを選んで右クリックしますと、先ほど作成したアクションが表示されます。</p>
<p>作成したアクション名をクリックしますと実行されます。</p>


<p><img class="press_98_image m_0" src="../assets/img/press/image/image_217.jpg" width="640" height="400" alt="" title=""></p>


<p>アクションを実行しますと、こんな感じになります。</p>


<p><img class="press_98_image m_0" src="../assets/img/press/image/image_218.jpg" width="640" height="400" alt="" title=""></p>


<p>便利！！</p>





<h2 class="heading">Automatorアクションの削除の仕方</h2>
<p>次は作成したアクションの削除の方法を説明します。</p>


<p class="m_0">アップルメニュー</p>
<p class="m_0">↓</p>
<p class="m_0">システム環境設定</p>
<p class="m_0">↓</p>
<p class="m_0">キーボード</p>
<p class="m_0">↓</p>
<p class="m_0">サービス</p>
<p class="m_0">↓</p>
<p class="m_0">消したいアクション名</p>
<p class="m_0">↓</p>
<p class="m_0">アクションファイル</p>
<p class="m_0">↓</p>
<p class="m_0">右クリック</p>
<p class="m_0">↓</p>
<p>ゴミ箱に入れる</p>


<p><img class="press_mini_image m_0" src="../assets/img/press/image/image_219.jpg" width="640" height="400" alt="" title=""></p>

<p><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_220.jpg" width="640" height="400" alt="" title=""></p>

<p><img class="press_screen_shot_image m_0" src="../assets/img/press/image/image_221.jpg" width="640" height="400" alt="" title=""></p>

<p><img class="press_98_image m_0" src="../assets/img/press/image/image_222.jpg" width="640" height="400" alt="" title=""></p>

<p>これでアクションを削除完了です。</p>


<h2 class="heading">まとめ</h2>
<p class="m_0">普段は大量の画像を連番にしたい！なんて事は少ないかと思いますが</p>
<p>この方法を知っていれば一気に時間短縮が出来ますね！</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2013-10-07_automator_image_batch_rename/
			</guid>
			<pubDate>Mon, 07 Oct 2013 17:51:38 +0900</pubDate>
			</item>
			<item>
			<title>jQueryでDOM操作する際の基本記述を勉強し直してみたよ。</title>
			<link>
			http://programmerbox.com/2013-09-26_jquery_dom_basic_description/
			</link>
			<description>
			<![CDATA[
			久し振りにJavaScriptを触ったら物凄く忘れていたので、まずはjQueryの基本記述をもう一度勉強し直してみました！DOMを操作する事って多々あると思いますので、ある意味チートシ...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>久し振りにJavaScriptを触ったら物凄く忘れていたので、まずはjQueryの基本記述をもう一度勉強し直してみました！DOMを操作する事って多々あると思いますので、ある意味チートシートのように見て頂くと嬉しいです。DOM以外にも偶数処理やクローン等も載せておきます。</p>
<nav class="detail_press_index clearfix">
	<h2 id="s_0p"><span class="color">目次</span></h2>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">親要素を取得する方法</span></li>
		<li class="n_2"><span class="scroll_btn">子要素を取得する方法</span></li>
		<li class="n_3"><span class="scroll_btn">兄弟要素を取得する方法</span></li>
		<li class="n_4"><span class="scroll_btn">要素を書き換えする方法</span></li>
		<li class="n_5"><span class="scroll_btn">HTMLを追加する方法</span></li>
		<li class="n_6"><span class="scroll_btn">要素を移動する方法</span></li>
		<li class="n_7"><span class="scroll_btn">要素を削除する方法</span></li>
		<li class="n_8"><span class="scroll_btn">数字、奇数、偶数指定で処理したい時</span></li>
		<li class="n_9"><span class="scroll_btn">要素のクローンを生成したい時</span></li>
		<li class="n_10"><span class="scroll_btn">勉強する際に参考にした記事</span></li>
		<li class="n_11"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>



<style>

.javascript_tab {
    background-color: #343434;
    border-color: #E0E0E0;
    border-radius: 2px 2px 0 0;
    border-style: solid solid none;
    border-width: 1px 1px medium;
		color: #2688CC;
    font-size: 64%;
    font-weight: bold;
    margin: 0 0 0 30px;
    max-width: 60px;
    padding: 3px 0;
    text-align: center;
}
.b_b_1 {
    border-bottom: 1px solid #00A4E1;
}
.m_t_45 {
	margin-top: 45px !important;
}
</style>










<h2 class="heading">親要素を取得する方法</h2>
<p>まずは親要素の取得系からいきましょー。</p>



<h3 class="b_b_1">一つ上の親要素取得</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 一つ上の親要素取得
$(".hoge").parent();

// 要素がdivなら取得する。divでなければ空(Objectは返ってくる)
$(".hoge").parent("div");
</pre>


<h3 class="m_t_30 b_b_1">親全取得</h3>
<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 親全取得
$(".hoge").parents();

// 親を指定して取得
$(".hoge").parents(".class_name");
</pre>

<h3 class="m_t_30 b_b_1">開始要素から最も近い親要素を選択</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 開始要素から最も近い親要素を選択
$(".hoge").closest("div");
</pre>



<h2 class="heading m_t_45">子要素を取得する方法</h2>

<p>次は子要素の取得系。</p>

<h3 class="b_b_1">全ての子要素取得</h3>
<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 全ての子要素取得
$(".hoge").children();

// 指定したタグの要素を全取得。なければ空(Objectは返ってくる)
$(".hoge").children("p");
</pre>

<h3 class="m_t_30 b_b_1">要素のテキストノードも含めた全子要素を取得</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 要素のテキストノードも含めた全子要素を取得
$(".hoge").contents();
</pre>



<h3 class="m_t_30 b_b_1">全子孫要素から指定したタグの要素を全取得</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">

// 全子孫要素から指定したタグの要素を全取得。なければ空(Objectは返ってくる)
$(".hoge").find("div");
</pre>



<h2 class="heading m_t_45">兄弟要素を取得する方法</h2>

<p>兄弟内の要素を取得するにはこんな感じで。</p>

<h3 class="b_b_1">次にある要素取得(兄弟要素ならば)</h3>


<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 次にある要素取得(兄弟要素ならば)
$(".hoge").next();

// 絞り込みも可能
$(".hoge").next("div");

// 現在の要素の次以降にある兄弟要素を全取得
$(".hoge").nextAll();
</pre>

<h3 class="m_t_30 b_b_1">前にある要素取得(兄弟要素ならば)</h3>
<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 前にある要素取得(兄弟要素ならば)
$(".hoge").prev();

// 絞り込みも可能
$(".hoge").prev("div");

// 現在の要素の前以降にある兄弟要素を全取得
$(".hoge").prevAll();
</pre>

<h2 class="heading m_t_45">要素を書き換えする方法</h2>

<p>取得系を覚えましたら、次は書き換えを。</p>

<h3 class="b_b_1">テキスト書き換え</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// テキスト書き換え
$(".hoge").text("書き換える");
</pre>

<h3 class="m_t_30 b_b_1">HTML書き換え</h3>
<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// HTML書き換え
$(".hoge").html("書き換える");
</pre>

<h2 class="heading m_t_30">HTMLを追加する方法</h2>

<p>追加系はかなり重要なので覚えときましょう。</p>

<h3 class="m_t_30 b_b_1">指定した要素内部の先頭に追加</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 先頭にHTML追加
$(".hoge").prepend("追加");
</pre>

<h3 class="m_t_30 b_b_1">指定した要素内部の最後に追加</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 要素の内部の最後にHTML追加
$(".hoge").append("追加");
</pre>


<h3 class="m_t_30 b_b_1">指定した要素の前に追加</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 指定した要素の前に追加
$(".hoge").before("追加");
</pre>

<h3 class="m_t_30 b_b_1">指定した要素の後に追加</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 指定した要素の後に追加
$(".hoge").after("追加");
</pre>


<h2 class="heading m_t_30">要素を移動する方法</h2>
<p class="m_0">prependTo()、appendTo()、insertBefore()、insertAfter()を使用して移動する方法は</p>
<p class="m_0">こちらの記事で簡潔に説明されています。</p>
	<p><a href="http://d.hatena.ne.jp/awacio/20100320/1269090288" target="_blank">オブジェクトの操作その４（HTML 要素の移動） - awacio.log</a></p>

<h3 class="m_t_30 b_b_1">一番上に移動</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 一番上に移動
$(".hoge").click(function() {
	var target = $(this);
	$(".fuga").prepend(target);
});
</pre>

<h3 class="m_t_30 b_b_1">一番下に移動</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 一番下に移動
$(".hoge").click(function() {
	var target = $(this);
	$(".fuga").append(target);
});</pre>

<h3 class="m_t_30 b_b_1">一つ上に移動</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 一つ上に移動
$(".hoge").click(function() {
	var target = $(this);
	var prev = target.prev();
	prev.before(target);
});
</pre>

<h3 class="m_t_30 b_b_1">一つ下に移動</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 一つ下に移動
$(".hoge").click(function() {
	var target = $(this);
	var next = target.next();
	next.after(target);
});
</pre>

<h2 class="heading m_t_30">要素を削除する方法</h2>

<p class="m_0">削除するにも細かい挙動がありますので気をつけたい所です。細かい挙動の説明はこの記事を見て頂くと良いかと思います。</p>

	<p><a href="http://phpjavascriptroom.com/?t=ajax&p=jquery_manipulation_removing" target="_blank">DOM制御･更新処理：削除｜jQuery APIリファレンス｜Ajax｜PHP &amp; JavaScript Room</a></p>


<h3 class="m_t_30 b_b_1">要素を削除</h3>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// DOMから削除
$(".hoge").click(function() {
	$(this).remove();
});
</pre>

<h2 class="heading m_t_30">数字、奇数、偶数指定で処理したい時</h2>

<p>短いコードで実装出来ますので便利です。</p>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// 3番目のliだけ処理
$("ul li:nth-child(3)").each(function() {
	$(this).css( {
		background: "#ccc"
	});
})

// 偶数のliだけ処理
$("ul li:nth-child(2n)").each(function() {
	$(this).css( {
		background: "#ccc"
	});
})
</pre>

<h2 class="heading m_t_30">要素のクローンを生成したい時</h2>

<p>使う機会はそこまでありませんがカンタンに出来ますので覚えといて損はないでしょう。</p>

<div class="javascript_tab">jQuery</div>
<pre class="brush: javascript; light:true; tab-size: 2;">
// クローン生成
$(".hoge").click(function() {
	var this_clone = $(this).clone();
	$(this).after(this_clone);
});
</pre>

<h2 class="heading m_t_30">勉強する際に参考にした記事</h2>

	<p><a href="http://satussy.blogspot.jp/2011/05/jquery.html" target="_blank">make a record of&#8230;: jQuery親要素&#12289;子要素&#12289;兄弟要素取得のまとめ</a></p>


	<p><a href="http://yakinikunotare.boo.jp/orebase/index.php?Javascript%2FjQuery%2F%BB%D2%CD%D7%C1%C7%A4%CE%C1%E0%BA%EE" target="_blank">Javascript/jQuery/子要素の操作 - 俺の基地</a></p>


	<p><a href="http://www.geekzshu.com/jquery/126" target="_blank">jqueryでhtmlの書き換えを行う方法</a></p>


	<p><a href="http://black-flag.net/jquery/20110601-3147.html" target="_blank">jQueryで（n）番目（ｎ倍数）の特定要素に処理を加える「:nth-child()」のちょっと便利な使い方 | BlackFlag</a></p>


	<p><a href="http://d.hatena.ne.jp/awacio/20100320/1269090288" target="_blank">オブジェクトの操作その４（HTML 要素の移動） - awacio.log</a></p>


	<p><a href="http://knt45.hatenablog.com/entry/2013/01/31/105806" target="_blank">jQueryで連続したDOM要素のいずれかをクリックした際に、その要素を一番上、一番下、一つ上、一つ下に移動する方法 - knt45の日記</a></p>


	<p><a href="http://misato.moo.jp/jquery/jquery_dom_02.html" target="_blank">jqueryを使ってみよう | jqueryのＤＯＭ操作</a></p>

	<p><a href="http://phpjavascriptroom.com/?t=ajax&p=jquery_manipulation_removing" target="_blank">DOM制御･更新処理：削除｜jQuery APIリファレンス｜Ajax｜PHP &amp; JavaScript Room</a></p>

<h2 class="heading">まとめ</h2>
<p>Jqueryの基本記述の記事なんて恥ずかしくて書けないと躊躇していたのですが、カンタンなコードの中にも細かい違いがありますし、DOM操作はかなり重要ですので、チートシート的な記事にしてみました。</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2013-09-26_jquery_dom_basic_description/
			</guid>
			<pubDate>Thu, 26 Sep 2013 12:05:22 +0900</pubDate>
			</item>
			<item>
			<title>2013年度TIOBE発表プログラミング言語ランキングとweb系にオススメする言語</title>
			<link>
			http://programmerbox.com/2013-08-28_2013_Programming_ranking/
			</link>
			<description>
			<![CDATA[
			2013年度プログラミングランキングがTIOBEから8月に発表されました。少し記事にするのが遅くなってしまいましたが、ちょっとランキングがどうなってるのか気になったので記事に...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>2013年度プログラミングランキングがTIOBEから8月に発表されました。少し記事にするのが遅くなってしまいましたが、ちょっとランキングがどうなってるのか気になったので記事にしてみます。その他に人気のあるwebサービスがなんの言語で開発されているのかをちょびっとだけ集めてみましたので、今後勉強したい言語を選ぶ為の材料としていただけると嬉しいです。</p>
<nav class="detail_press_index clearfix">
	<h2 id="s_0p"><span class="color">目次</span></h2>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">2013年度プログラミングランキング表</span></li>
		<li class="n_2"><span class="scroll_btn">webサービス別使用されている言語まとめ</span>
			<ul class="nest">
				<li><span class="nest_number">2.1</span><span class="scroll_btn">FaceBook</span></li>
				<li><span class="nest_number">2.2</span><span class="scroll_btn">Twitter</span></li>
				<li><span class="nest_number">2.3</span><span class="scroll_btn">mixi</span></li>
				<li><span class="nest_number">2.4</span><span class="scroll_btn">GitHub</span></li>
			</ul>
		</li>
		<li class="n_3"><span class="scroll_btn">webサービスを開発するにあたってオススメしたい言語</span></li>
		<li class="n_4"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>
<h2 class="heading">2013年度プログラミングランキング表</h2>
<p>2012年とそんなに変わりはないのですが、10位以内の言語を合計すると物凄いシェア率になっているんだなと改めて実感してしまいました。言語名をクリックすると10年間のシェア遷移のグラフが見る事が出来ます。</p>

<table class="type_1 table_responsive">
<tbody>
<tr>
<th nowrap="" align="center">2013年</th>
<th nowrap="" align="center">2012年</th>
<th nowrap="" align="center">言語名</th>
<th nowrap="" align="center">シェア率</th>
</tr>
<tr height="25">
	<td align="center">1</td>
	<td align="center">2</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Java.html">Java</a></td>
	<td align="center">15.978%</td>
</tr>

<tr height="25">
	<td align="center">2</td>
	<td align="center">1</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/C.html">C</a></td>
	<td align="center">15.974%</td>
</tr>

<tr height="25">
	<td align="center">3</td>
	<td align="center">4</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/C__.html">C++</a></td>
	<td align="center">9.371%</td>
</tr>

<tr height="25">
	<td align="center">4</td>
	<td align="center">3</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Objective-C.html">Objective-C</a></td>
	<td align="center">8.082%</td>
</tr>

<tr height="25">
	<td align="center">5</td>
	<td align="center">6</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/PHP.html">PHP</a></td>
	<td align="center">6.694%</td>
</tr>

<tr height="25">
	<td align="center">6</td>
	<td align="center">5</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/C_.html">C#</a></td>
	<td align="center">6.117%</td>
</tr>

<tr height="25">
	<td align="center">7</td>
	<td align="center">7</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/(Visual)_Basic.html">(Visual) Basic</a></td>
	<td align="center">3.873%</td>
</tr>

<tr height="25">
	<td align="center">8</td>
	<td align="center">8</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Python.html">Python</a></td>
	<td align="center">3.603%</td>
</tr>

<tr height="25">
	<td align="center">9</td>
	<td align="center">11</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/JavaScript.html">JavaScript</a></td>
	<td align="center">2.093%</td>
</tr>

<tr height="25">
	<td align="center">10</td>
	<td align="center">10</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Ruby.html">Ruby</a></td>
	<td align="center">2.067%</td>
</tr>

<tr height="25">
	<td align="center">11</td>
	<td align="center">9</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Perl.html">Perl</a></td>
	<td align="center">2.041%</td>
</tr>

<tr height="25">
	<td align="center">12</td>
	<td align="center">15</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Transact-SQL.html">Transact-SQL</a></td>
	<td align="center">1.393%</td>
</tr>

<tr height="25">
	<td align="center">13</td>
	<td align="center">14</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Visual_Basic__NET.html">Visual Basic .NET</a></td>
	<td align="center">1.320%</td>
</tr>

<tr height="25">
	<td align="center">14</td>
	<td align="center">12</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Delphi_Object_Pascal.html">Object Pascal</a></td>
	<td align="center">0.918%</td>
</tr>

<tr height="25">
	<td align="center">15</td>
	<td align="center">20</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/MATLAB.html">MATLAB</a></td>
	<td align="center">0.841%</td>
</tr>

<tr height="25">
	<td align="center">16</td>
	<td align="center">13</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Lisp.html">Lisp</a></td>
	<td align="center">0.752%</td>
</tr>

<tr height="25">
	<td align="center">17</td>
	<td align="center">19</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/PL_SQL.html">PL/SQL</a></td>
	<td align="center">0.751%</td>
</tr>

<tr height="25">
	<td align="center">18</td>
	<td align="center">16</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Pascal.html">Pascal</a></td>
	<td align="center">0.620%</td>
</tr>

<tr height="25">
	<td align="center">19</td>
	<td align="center">23</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/Assembly.html">Assembly</a></td>
	<td align="center">0.616%</td>
</tr>

<tr height="25">
	<td align="center">20</td>
	<td align="center">22</td>
	<td><a target="_blank" href="http://www.tiobe.com/content/paperinfo/tpci/SAS.html">SAS</a></td>
	<td align="center">0.580%</td>
</tr>

</tbody></table>

<p class="m_t_60">こちらは10位以内の言語シェアグラフ</p>

<img class="press_98_image m_0" src="../assets/img/press/image/image_206.jpg" width="640" height="400" title="" alt="">

<blockquote cite="">

</blockquote>
<p class="text_right"><cite>引用元:<a target="_blank" href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html">TIOBE Software: The Coding Standards Company</a></cite></p>

<p>ボクが応援しているPHPさんも中々がんばっている様子です。</p>


<h2 class="heading">有名どころのwebサービスで使用されている言語</h2>

<h3 class="heading">FaceBook</h3>
<h4>開発言語：PHP、C++</h4>

<blockquote cite="http://www.publickey1.jp/blog/09/facebook8php.html">
<p>PHP を選んだ理由は、シンプルな言語で学びやすいからだ。書くのも簡単だし、読むのもデバッグも簡単。一方で、ダークサイドもある、ランタイムコストだ。 CPUとメモリの消費が大きいし、ほかの言語と統合するのも難しい。また大規模なプロジェクトでは、モジュール構造をうまくサポートしているとはいえない。</p>

<p>それ以外にも、長い経験から発見したPHPの課題がある。新しく書いたコードが古いコードを遅くするということだ。例えば、PHPで書いたABCという機能にDEFという新機能を付け加えると、たとえABCからDEFを呼び出していなかったとしてもABCの動作が以前より遅くなるのだ。初期化コストなどが増加するためだ。PHPにはこうしたスケーラビリティの課題がある。</p>

<p>そこでわれわれは、PHPの初期化を緩和するためのの拡張であるLazy loadingや、Cache priming、最近ではPHPをC++にコンパイルするといったアプローチを採用している。</p>
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://www.publickey1.jp/blog/09/facebook8php.html">Facebookが大規模スケーラビリティへの挑戦で学んだこと（前編）～800億枚の写真データとPHPのスケーラビリティ問題 － Publickey</a></cite></p>



<h3 class="heading">Twitter</h3>
<h4>開発言語：Scala</h4>

<blockquote cite="http://it.slashdot.jp/story/09/04/10/0421223/Twitter%E3%80%81Ruby-on-Rails%E3%81%8B%E3%82%89Scala%E3%81%B8">
<div class="p" id="text-82312">
	<p>ある Anonymous Coward 曰く、</p><blockquote><div><p>Twitter は Ruby on Rails で構築されたそのインフラを徐々に Scala に置き換えているそうだ (<a href="http://www.technologyreview.com/blog/editors/23282/?nlid=1908">Technology Review の記事</a>, <a href="http://developers.slashdot.org/article.pl?sid=09/04/07/1928218">本家 /. 記事</a>) 。</p><p>Twitter ではフロントエンド、バックエンド共に Ruby on Rails が使われていたが、最近では大量のメッセージを処理できず「Fail Whale」出現の原因となったりしていた。このため Twitter の開発チームは代替言語として <a href="http://www.scala-lang.org/">Scala</a> を採用、少しずつバックエンドやインフラを Scala に置き換えているそうだ。スイス連邦工科大学ローザンヌ校の Martin Odersky 氏によって開発された比較的新しいプログラミング言語である Scala は並列プロセスの処理に長けている点が Twitter に向いており、また言語としてのフレキシビリティも開発にとっては魅力とのこと。短所としては、機能も多く、シンタックスも見慣れた感じでは無いため習得が簡単ではないことと、新しい言語であるため実績がまだ少ないことだという。それでもTwitterでは多くのテストケースを成功させており、Scala の方がメリットが多いと考えているようだ。</p><p>開発チームはフロントエンドは Ruby on Rails のまま、年内には API リクエストの一連の処理を Scala で行えるようにしたいとしている。</p></div></blockquote>
	</div></blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://it.slashdot.jp/story/09/04/10/0421223/Twitter%E3%80%81Ruby-on-Rails%E3%81%8B%E3%82%89Scala%E3%81%B8">Twitter、Ruby on RailsからScalaへ | スラッシュドット・ジャパン IT</a></cite></p>




<h3 class="heading">mixi</h3>
<h4>開発言語：Perl</h4>

<blockquote cite="http://techtarget.itmedia.co.jp/tt/news/0709/12/news01.html">
<p>&#12288;ミクシィは、「LAMP（OSのLinux、WebサーバのApache、DBMSのMySQL、開発言語のPerl、PHP、Python）」と呼ばれるWebシステム向けの標準的なオープンソースソフトウェア（以下、OSS）でシステムを自社開発し、安価なPCサーバを1000台以上連ねる超分散構成でmixiのサービスを支えている（広告配信など周辺機能では、パッケージ製品を採用している部分もある）。このmixiのケースは、MySQLを採用するWebシステムとして、間違いなく世界有数の規模といえる。</p>
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://techtarget.itmedia.co.jp/tt/news/0709/12/news01.html">mixiの生みの親“バタラ氏”が語るMySQLの意外な利用法 － TechTargetジャパン システム開発</a></cite></p>





<h3 class="heading">GitHub</h3>
<h4>開発言語：Ruby</h4>

<blockquote cite="http://matome.naver.jp/odai/2133699923370899501">
<p class="mdMTMWidget01ItemTxt01View"><!--
-->Rubyを採用しているWebサービスの一例：<br><br>Twilog ( <a href="http://twilog.org/" target="_blank">http://twilog.org/</a> )<br>GitHub ( <a href="https://github.com/" target="_blank">https://github.com/</a> )<br>Favstar.fm ( <a href="http://favstar.fm/" target="_blank">http://favstar.fm/</a> )<br>Twitter ( <a href="http://www.twitter.com/" target="_blank">http://www.twitter.com/</a> ) (昔の話。今はJava。)<!--
--><!--
--></p>
</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://matome.naver.jp/odai/2133699923370899501">Webサービス構築に使われているプログラミング言語まとめ - NAVER まとめ</a></cite></p>

<p class="m_0 m_t_60">やはりwebサービスはPHPが主流ですが、</p>
<p>最近はRubyがwebサービスでもキテる感がありますね。(2011年あたりから)</p>

<h2 class="heading">webサービスを開発するにあたってオススメしたい言語</h2>
<p>webサービスを開発する時に使用するオススメの言語はRubyのRuby on Railsが良いのではないでしょうか。フレームワークは好きではないのですが、このフレームワークに限っては開発スピードがアップしますのでオススメです。</p>



<h3>webサービスを構築するのに適している言語一覧表</h3>






<table class="type_1 m_0">
	<thead>
		<tr>
			<th>言語名</th>
			<th>難易度</th>
			<th>カッコ良さ度</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>PHP</td>
			<td>★☆☆☆</td>
			<td>★☆☆☆</td>
		</tr>
		<tr>
			<td>Ruby</td>
			<td>★★☆☆</td>
			<td>★★★★</td>
		</tr>
		<tr>
			<td>Python</td>
			<td>★★☆☆</td>
			<td>★★★☆</td>
		</tr>
		<tr>
			<td>Perl</td>
			<td>★★☆☆</td>
			<td>★★☆☆</td>
		</tr>
	</tbody>
</table>
<p><small>※ ボクの勝手な偏見です。</small></p>

<p>200種類以上あると言われているプログラム言語ですがwebサービスを構築するのにはやはり<strong>RubyのフレームワークであるRuby on Railsが一番カンタンでカッコいい</strong>と思います。</p>


<h3>プログラム全般を勉強出来る<a href="http://www.buzzword.jp/profile/" target="_blank">TATSUO IKURA</a>さんのブログがオススメです。</h3>
<blockquote cite="">

<p>Ruby on RailsはWebアプリケーション作成のためのフレームワークの一つであり、プログラミング言語としてRubyを使用するフレームワークの代表的なものです。ここではRailsを使ったアプリケーション作成の方法について順に解説を行ないます。</p>

<p>
			事前に「<a href="../railsinstall/">Railsインストール</a>」を参照して頂きRailsのインストールを行なって下さい。またプログラミング言語のRubyに関しては「<a href="../ini/">Ruby入門</a>」をご参照下さい。
			</p>

<p>
			関連サイト:<a href="http://www.dbonline.jp/sqlite/">SQLite入門</a>, <a href="http://www.adminweb.jp/apache/">Apache入門</a>
			</p>

</blockquote>
<p class="text_right">引用元:<cite><a target="_blank" href="http://www.rubylife.jp/rails/">Ruby on Rails入門</a></cite></p>




<h2 class="heading">まとめ</h2>
<p>Ruby on Rails以外にはボクがメインで使っているPHPもオススメです。バージョンも5.5になり古いバージョンを使う習慣があったPHPですが、最近ではPHPをアップデートして開発する会社も多くなって来たと感じています。プログラム言語はあくまで手段ですので、個人、プロジェクトチームに合った言語を使用してwebサービスを開発していけたらいいですね。</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2013-08-28_2013_Programming_ranking/
			</guid>
			<pubDate>Wed, 28 Aug 2013 06:19:05 +0900</pubDate>
			</item>
			<item>
			<title>かわいい顔文字をまとめてみたよ!ダウンロードして楽しもう!!</title>
			<link>
			http://programmerbox.com/2013-08-13_cute_emoticon_download/
			</link>
			<description>
			<![CDATA[
			iPhoneに可愛い顔文字が入っていなくって入れたいなって考えて顔文字をまとめてみました。Twitterで人気の顔文字を主に集めてかわいいやつだけを厳選してカテゴリ分けしましたの...
			]]>
			</description>
			<content:encoded>
			<![CDATA[
			<p>iPhoneに可愛い顔文字が入っていなくって入れたいなって考えて顔文字をまとめてみました。Twitterで人気の顔文字を主に集めてかわいいやつだけを厳選してカテゴリ分けしましたので選びやすくなっていると思います。使いたい顔文字をコピペしてユーザー辞書登録しましょー。</p>
<nav class="detail_press_index clearfix">
	<h2 id="s_0p"><span class="color">目次</span></h2>
	<ul class="left no_width">
		<li class="n_1"><span class="scroll_btn">Twitterで大人気の顔文字(特殊系顔文字)</span>
			<ul class="nest">
				<li><span class="nest_number">1-1.</span><span class="scroll_btn">ʕ•̬͡•ʔ系</span></li>
				<li><span class="nest_number">1-2.</span><span class="scroll_btn">ʕ·ᴥ·ʔ系</span></li>
				<li><span class="nest_number">1-3.</span><span class="scroll_btn"> ૂི•̮͡• ૂ ྀ系</span></li>
				<li><span class="nest_number">1-4.</span><span class="scroll_btn">(¦3[▓▓]系</span></li>
				<li><span class="nest_number">1-5.</span><span class="scroll_btn">(๑˃̵ᴗ˂̵)و系</span></li>
				<li><span class="nest_number">1-6.</span><span class="scroll_btn">(｡╹ω╹｡)系</span></li>
				<li><span class="nest_number">1-7.</span><span class="scroll_btn">٩(๑`ȏ´๑)۶系</span></li>
				<li><span class="nest_number">1-8.</span><span class="scroll_btn">꒰๑´•.̫ • `๑꒱系</span></li>
				<li><span class="nest_number">1-9.</span><span class="scroll_btn">(੭ु´͈ ᐜ `͈)੭ु⁾⁾系</span></li>
				<li><span class="nest_number">1-10.</span><span class="scroll_btn">スーパーマン系</span></li>
				<li><span class="nest_number">1-11.</span><span class="scroll_btn">すごいですね系</span></li>
				<li><span class="nest_number">1-12.</span><span class="scroll_btn">激おこﾌﾟﾝﾌﾟﾝ丸系</span></li>
				<li><span class="nest_number">1-13.</span><span class="scroll_btn">キラキラ・♡系</span></li>
				<li><span class="nest_number">1-14.</span><span class="scroll_btn">楽しい！！系</span></li>
				<li><span class="nest_number">1-15.</span><span class="scroll_btn">くそねみ系</span></li>
				<li><span class="nest_number">1-16.</span><span class="scroll_btn">ちんちん系</span></li>
				<li><span class="nest_number">1-17.</span><span class="scroll_btn">ジョジョ系</span></li>
				<li><span class="nest_number">1-18.</span><span class="scroll_btn">ヘタ文字系</span></li>
				<li><span class="nest_number">1-19.</span><span class="scroll_btn">モミモミ系</span></li>
				<li><span class="nest_number">1-20.</span><span class="scroll_btn">キモい系</span></li>
				<li><span class="nest_number">1-21.</span><span class="scroll_btn">ﾃﾍﾍﾟﾛ系</span></li>
				<li><span class="nest_number">1-22.</span><span class="scroll_btn">ﾎﾓｫ…系</span></li>
				<li><span class="nest_number">1-23.</span><span class="scroll_btn">白目系</span></li>
				<li><span class="nest_number">1-24.</span><span class="scroll_btn">はみ出る系(書体によりはみ出ませんがスマホで見るとはみでます。)</span></li>
			</ul>
	</li>
		<li class="n_2"><span class="scroll_btn">2ch(2ちゃんねる)系顔文字</span>
			<ul class="nest">
				<li><span class="nest_number">2-1.</span><span class="scroll_btn">ショボーン系</span></li>
				<li><span class="nest_number">2-2.</span><span class="scroll_btn">キリッ系</span></li>
				<li><span class="nest_number">2-3.</span><span class="scroll_btn">キター系</span></li>
				<li><span class="nest_number">2-4.</span><span class="scroll_btn">オワタ系</span></li>
				<li><span class="nest_number">2-5.</span><span class="scroll_btn">ガクブル系</span></li>
				<li><span class="nest_number">2-6.</span><span class="scroll_btn">シャキーン系</span></li>
				<li><span class="nest_number">2-7.</span><span class="scroll_btn">ハァハァ系</span></li>
			</ul>
		</li>
		<li class="n_3"><span class="scroll_btn">ニコニコ系顔文字</span>
			<ul class="nest">
				<li><span class="nest_number">3-1.</span><span class="scroll_btn">ニコニコ系</span></li>
			</ul>
	</li>
		<li class="n_4"><span class="scroll_btn">海外顔文字</span>
			<ul class="nest">
				<li><span class="nest_number">4-1.</span><span class="scroll_btn">笑顔系</span></li>
				<li><span class="nest_number">4-2.</span><span class="scroll_btn">悲しい系</span></li>
				<li><span class="nest_number">4-3.</span><span class="scroll_btn">泣き顔系</span></li>
				<li><span class="nest_number">4-4.</span><span class="scroll_btn">その他系</span></li>
			</ul>
		</li>
		<li class="n_5"><span class="scroll_btn">定番顔文字</span>
			<ul class="nest">
				<li><span class="nest_number">5-1.</span><span class="scroll_btn">ω系(個人的に好きなのでここに置かせて頂きます)</span></li>
				<li><span class="nest_number">5-2.</span><span class="scroll_btn">恥ずかしい・照れる系</span></li>
				<li><span class="nest_number">5-3.</span><span class="scroll_btn">楽しい系</span></li>
				<li><span class="nest_number">5-4.</span><span class="scroll_btn">悲しい系</span></li>
				<li><span class="nest_number">5-5.</span><span class="scroll_btn">笑顔系</span></li>
				<li><span class="nest_number">5-6.</span><span class="scroll_btn">泣く系</span></li>
				<li><span class="nest_number">5-7.</span><span class="scroll_btn">殴る系</span></li>
				<li><span class="nest_number">5-8.</span><span class="scroll_btn">ぺろ系</span></li>
				<li><span class="nest_number">5-9.</span><span class="scroll_btn">眠い系</span></li>
				<li><span class="nest_number">5-10.</span><span class="scroll_btn">汗系</span></li>
			</ul>
		</li>
		<li class="n_6"><span class="scroll_btn">まとめ</span></li>
	</ul>
</nav>




<style>
.detail_press h3 {
	border-bottom: 1px solid #00A4E1;
}
</style>








<h2 class="heading">Twitterで大人気の顔文字(特殊顔文字)</h2>
<p>Twitterで飛び交う顔文字達はもうスゴい事になっています。2ちゃんもスゴいと思いましたがTwitterユーザーの作る顔文字もとんでもない事になっていてかわいいのから気持悪いのまで様々ですね。ネタ系の顔文字が使いやすいのでオススメです。</p>

<h3 class="heading">ʕ•̬͡•ʔ系</h3>
<p>
ʕ•̫͡•ʔ
</p>
<p>
    ʕ•̫͡•ོʔ
</p>
<p>
ʕु•̫͡•ʔु☂
</p>
<p>
(っ˘зʕ•̫͡•ʔ
</p>
<p>
ʕ•̫͑͡•ʔͦʕͮ•̫ͤ͡•ʔ
</p>
<p>
ʕ•̬͡•ʕ•̫͡•♥
</p>
<p>
ʕ·͡ˑ·ཻʔෆ⃛ʕ•̫͡•ོʔ
</p>
<p>
ʕ•͡ω•ʔʕ•͡-•ʔ
</p>
<p>
ʕ•̫͡•ʕ•̫͡•ʔ•̫͡•ʔ
</p>
<p>
ʕ•ི̮͡•ྀʕ•̹͡-ʔ•ི̬͡•ྀʔ
</p>
<p>
ʕ•̼͡•ʕ-̺͡•ʔ•̮͡•ʔ
</p>
<p>
ʕ•̫͡•ིʔྀʕ•̫͡•ིʔྀʕ•̫͡•ིʔྀ
</p>
<p>
ʕ•̫͡•ʕ*̫͡*ʕ•͓͡•ʔ-̫͡-ʕ•̫͡•ʔ*̫͡*ʔ-̫͡-ʔ
</p>
<p>
•̫͡•ʔʕ•̫͡•ʕ•̫͡•ʔ•̫͡•ʔ•̫͡•ʕ•̫͡•ʔ•̫͡•
</p>
<p>
ʕ•̫͡•ʕ•̫͡•ʔ•̫͡•ʔ•̫͡•ʕ•̫͡•ʔ•̫͡•ʕ•̫͡•ʕ•̫͡•ʔ•̫͡•ʔ•̫͡•ʕ•̫͡•ʔ•̫͡•ʔ♡
</p>
<p>
ʕ•͕͡•ʔ ʕ•̫͡•ʔ ʕ•͡•ʔ ʕ•͓͡•ʔ ʕ•͈͡•ʔ ʕ•̬͡•ʔ ʕ•̥͡•ʔ ʕ•̠͡•ʔ ʕ•̮͡•ʔ
</p>

<p>
ʕ•̫͡•ʕ*̫͡*ʕ•͓͡•ʔ-̫͡-ʕ•̫͡•ʔ*̫͡*ʔ-̫͡-ʔ
</p>

<h3 class="heading">ʕ·ᴥ·ʔ系</h3>
<p>
ʕ·ᴥ·ʔ
</p>
<p>
ʕ　•ᴥ•ʔ ʕ·ᴥ·ʔ
</p>

<h3 class="heading"> ૂི•̮͡• ૂ ྀ系</h3>
<p>
 ૂི•̮͡• ૂ ྀ
</p>

<h3 class="heading">(¦3[▓▓]系</h3>

<p>
(¦3[▓▓]
</p>
<p>
(:˒ꇤ[▓▓]
</p>


<h3 class="heading">(๑˃̵ᴗ˂̵)و系</h3>
<p>
(๑˃̵ᴗ˂̵)و
</p>

<p>
    (•̀ᴗ•́)و ̑̑
</p>
<p>
    (๑•̀ㅂ•́)و✧
</p>

<p>
٩( "ω" )و
</p>

<p>
٩( ᐛ )و
</p>
<p>
( ᐛ )و
</p>
<p>
(ง •̀_•́)ง‼
</p>

<h3 class="heading">(｡╹ω╹｡)系</h3>

<p>
(｡╹ω╹｡)
</p>
<p>
ლ(╹◡╹ლ)
</p>
<p>
(๑╹ڡ╹๑)
</p>
<p>
    (▰╹◡╹▰)
</p>
<p>
    ヾ(๑╹◡╹)ﾉ"
</p>

<p>
    ٩(╹⌓╹ )۶
</p>
<p>
    ✖╹◡╹✖
</p>
<p>
(⑅๑╹ڡ╹)
</p>
<p>
(✿╹◡╹)ﾉ
</p>
<p>
ღゝ◡╹)ノ♡
</p>
<p>
(๑╹ڡ╹)╭ ～ ♡
</p>
<p>
(๑´╹‸╹`๑)
</p>
<p>
(灬╹ω╹灬)
</p>

<h3 class="heading">٩(๑`ȏ´๑)۶系</h3>
<p>
٩(๑`ȏ´๑)۶
</p>
<p>
٩(๑˃̌ۿ˂̌๑)۶
</p>
<p>
٩(๑•̀ω•́๑)۶
</p>
<p>
٩(๑´0`๑)۶
</p>
<p>
   ٩(●˙▿˙●)۶
</p>
<p>
⁽⁽٩(๑˃̶͈̀ ᗨ ˂̶͈́)۶⁾⁾
</p>

<p>
٩(๑´3｀๑)۶
</p>
<p>
٩(๑❛ᴗ❛๑)۶
</p>

<h3 class="heading">꒰๑´•.̫ • `๑꒱系</h3>

<p>
꒰๑´•.̫ • `๑꒱
</p>

<p>
٩꒰๑❛▿❛ ॢ̩꒱
</p>

<p>
꒰✩"ω`ૢ✩꒱
</p>

<p>
꒰˘̩̩̩⌣˘̩̩̩๑꒱ ♡
</p>

<p>
◟꒰◍´Д‵◍꒱◞
</p>
<p>
    ٩꒰｡•◡•｡꒱۶
</p>


<h3 class="heading">(੭ु´͈ ᐜ `͈)੭ु⁾⁾系</h3>
<p>
(੭ु ‾̑ω‾̑)੭ु⁾⁾
</p>
<p>
(● ˃̶͈̀ロ˂̶͈́)੭ु⁾⁾
</p>
<p>
(੭ु ›ω‹ )੭ु⁾⁾♡
</p>

<p>
    (੭ु╹▿╹)੭ु⁾⁾
</p>

<p>
  (੭ु´͈ ᐜ `͈)੭ु⁾⁾
</p>
<p>
    (੭ु ˃̣̣̥᷄⌓˂̣̣̥᷅ )੭ु⁾⁾
</p>
<p>
    =͟͟͞͞٩(๑☉ᴗ☉)੭ु⁾⁾
</p>
<p>
   (੭ु ´ω` )੭ु⁾⁾
</p>
<p>
(੭ ˃̣̣̥ ω˂̣̣̥)੭ु⁾⁾
</p>

<p>
(੭ ˃̣̣̥ ω˂̣̣̥)੭ु⁾⁾
</p>

<h3 class="heading">スーパーマン系</h3>
<p>
─=≡Σ((( つ•̀ω•́)つ
</p>
<p>
 ～=͟͟͞͞⊂(⊂ "ω")
</p>

<h3 class="heading">すごいですね系</h3>
<p>
(´,,•ω•,,｀)
</p>
<p>
(๑´╹‸╹`๑)
</p>
<p>
ヾ(๑╹◡╹)ﾉ"
</p>
<h3 class="heading">激おこﾌﾟﾝﾌﾟﾝ丸系</h3>


<p>
٩(◦`꒳´◦)۶ ｵｺﾀﾞﾖ！
</p>
<p>
٩(๑òωó๑)۶　ｵｺﾀﾞﾖ！
</p>
<p>
٩(๑`ȏ´๑)۶//　激ｵｺ！
</p>
<p>
٩(๑`^´๑)۶ 激おこﾌﾟﾝﾌﾟﾝ丸
</p>
<p>
＼＼٩(๑`^´๑)۶//／／　激おこﾌﾟﾝﾌﾟﾝ丸！
</p>
<p>

ムカ着火ファイアー！
٩(๑`^´๑)۶༄༅༄༅༄༅༄༅)`Д´)ｱﾁﾞｨ!
</p>
<p>

カム着火ｲﾝﾌｪﾙﾉｫｫｫｵｵｵｳ！

( つ•̀ω•́)つ・・*:・:・゜:==≡≡Σ=͟͟͞͞(✡)`Д´）ｸﾞﾍｯ!
</p>
<p>


げきオコｽﾃｨｯｸﾌｧｲﾅﾘｱﾘﾃｨぷんぷんドリーム！

▒▒▓█▇▅▂∩( ✧Д✧)∩▂▅▇█▓▒▒
┣¨┣¨┣¨┣¨┣¨┣¨┣¨┣¨┣¨┣¨┣¨┣¨┣¨┣¨
</p>
<h3 class="heading">キラキラ・♡系</h3>
<p>
(்͂ॢ⁰்͂ॢ)३३३∾♪
</p>
<p>
(̂⁰̴̶̷ꇵ͒ॢ ⁰̴̶̷ૢෆ)̂⋆̥*̥̥⋆̥
</p>
<p>
(*˘︶˘*).｡.:*♡
</p>
<p>
(⁎⁍̴̛ᴗ⁍̴̛⁎)
</p>
<p>
(๑॔˃̶ॢ◟◞ ˂̶ॢ๑॓)♡
</p>
<p>
( ᵒ̴̶̷̤̀ुωᵒ̴̶̷̤́ू )･*♡
</p>
<p>
(๑॔˃̶ॢ◟◞ ˂̶ॢ๑॓)*೨⋆*✩‼‼
</p>
<p>
₍₍ ( ๑॔˃̶◡ ˂̶๑॓)◞♡
</p>

<p>
₍₍ ( ๑॔˃̶◡ ˂̶๑॓)◞♡
</p>
<p>
ヾ(｡&gt;﹏&lt;｡)ﾉﾞ✧*。
</p>
<p>
(੭ु ›ω‹ )੭ु⁾⁾♡
</p>
<p>
(♡ &gt;ω&lt; ♡)
</p>
<p>
( •ॢ◡-ॢ)-♡
</p>
<h3 class="heading">楽しい！！系</h3>
<p>
✌("ω"✌ )三✌("ω")✌三( ✌"ω")✌
</p>
<h3 class="heading">くそねみ系</h3>

<p>
(˘ω˘)
</p>
<p>
( ˇωˇ )
</p>

<h3 class="heading">ちんちん系</h3>
<p>
ﾖｼﾖｼ( ๑´•ω•)۶"╰⋃╯
</p>
<p>
    っ✄╰⋃╯
</p>
<p>
    ՇƷƕ╰ꂹ╯ՇƷƕ
</p>

<h3 class="heading">ジョジョ系</h3>
<p>
┣¨┣¨┣¨┣¨┣¨ ｺﾞｺﾞｺﾞｺﾞｺﾞ
</p>

<h3 class="heading">ヘタ文字系</h3>


<p>
( ′～‵)ŧ‹”ŧ‹”ŧ‹”ŧ‹”
</p>

<p>
㌰⋋( "Θ")⋌㌰㌰
</p>
<p>
    ㄑㄜ੭(΄◞ิ۝◟ิ‵)
</p>
<p>
(｡╹ω╹｡)ㄘんㄘんㄟ⁰ㄋㄟ⁰ㄋㄜㄝㄋ
</p>
<p>
    (⌯꒪͒ ૢ∀ ૢ꒪͒) ੭ੇ৴ડેং৴ડેং
</p>
<p>
(ღˇ◡ˇ)♥ℒᵒᵛᵉᵧᵤ♥
</p>
<p>
(๑&gt;◡&lt;๑) ɭ ɿ兯ƕ❤
</p>
<p>
　(⑅ ॣ•͈૦•͈ ॣ)꒳ᵒ꒳ᵎᵎᵎ
</p>
<p>
♪:*:･Ⴛ̅̀⊃תʅփ━ヽ(´∀｀ヽ)(/＇∀＇)/━♪:*:･
</p>
<p>
(´▽`) "`,、"`,、
</p>

<p>
(்͂ॢ⁰்͂ॢ)३३३∾♪
</p>

<h3 class="heading">モミモミ系</h3>
<p>
ლ(╹◡╹ლ
</p>
<p>
ლ(･ิω･ิლ)
</p>
<p>
ლ(◕‿◕。)ლ
</p>
<p>
ლ(´ڡ`ლ)
</p>


<h3 class="heading">キモい系</h3>
<p>
༼;´༎ຶ ۝ ༎ຶ༽
</p>


<p>
    ༽΄◞ิ౪◟ิ‵༼
</p>
<p>
    ༼･ิɷ･ิ༽
</p>
<p>
    ༼ꉺ✪ꉺ༽
</p>
<p>
    ༼☉ɷ⊙༽
</p>
<p>
    ༼☁ɷ☁༽
</p>
<p>
    ༼≖ɷ≖༽
</p>
<p>
    ༼•̃༼´◓ɷ◔`༽
</p>
<p>
    ༼•̃͡ ɷ•̃͡༽
</p>
<p>
    ༼இɷஇ༽
</p>
<p>
༼ ˇɷˇ ༽
</p>
<p>
(ી(΄◞ิ౪◟ิ‵)ʃ)
</p>
<p>
(;´༎ຶД༎ຶ`)
</p>
<p>
(･:ﾟдﾟ:･)ﾊｧﾊｧ
</p>
<p>
(;;ﾟ;;ё;;ﾟ;;)
</p>
<p>
(☝◉ਊ ◉)☝
</p>
<p>
（◞≼⓪≽◟⋌⋚⋛⋋◞≼⓪≽)
</p>
<p>
     三ʕ̡̢̡ʘ̅͟͜͡ʘ̲̅ʔ̢̡̢))ω((ʕ̡̢̡ʘ̅͟͜͡ʘ̲̅ʔ̢̡̢三
</p>
<p>
    ၄ စ ౪ စ ၃
</p>
<h3 class="heading">ﾃﾍﾍﾟﾛ系</h3>
<p>
ˉ̞̭ ( ›◡ु‹ ) ˄̻ ̊
</p>
<p>
(･◡ु‹ ) ✧*ﾃﾍﾍﾟﾛ
</p>
<p>
ˉ̞̭ ( ›◡ु‹ ) ˄̻ ̊
</p>

<h3 class="heading">ﾎﾓｫ…系</h3>
<p>
┌（┌ ＾o＾）┐ﾎﾓｫ…
</p>

<h3 class="heading">白目系</h3>
<p>
( ꒪⌓꒪)
</p>

<h3 class="heading">はみ出る系(書体によりはみ出ませんがスマホで見るとはみでます。)</h3>
<p>
✧ʕ̢̣̣̣̣̩̩̩̩·͡˔·ོɁ̡̣̣̣̣̩̩̩̩
</p>

<p>
(；°̥̥̥̥̥̥̥̥艸°̥̥̥̥̥̥̥̥)
</p>

<p>
(((;⁻̦̦̦̦̦̦̦̦̦̦̦̦̦д⁻̦̦̦̦̦̦̦̦̦̦̦̦̦̦᷅;)))
</p>

<p>
o͡͡͡͡͡͡͡͡͡͡͡͡͡͡╮(;´༎ຶД༎ຶ`)╭o͡͡͡͡͡͡͡͡͡͡͡͡͡͡
</p>

<p>
(⁻̦̦̦̦̦̦̦̦̦̦̦̦̦ν⁻̦̦̦̦̦̦̦̦̦̦̦̦̦̦᷅｡)
</p>

<p>
(°̥̥̥̥̥̥̥̥o°̥̥̥̥̥̥̥̥ )人 (°̥̥̥̥̥̥̥̥-°̥̥̥̥̥̥̥̥ )
</p>

<p>
o͡͡͡͡͡͡͡͡͡͡͡͡͡͡╮(。❛ᴗ❛。)╭o͡͡͡͡͡͡͡͡͡͡͡͡͡͡
</p>

<p>
(꒪.̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̸̨̨̨̨̨̨̨̨̨̨̨̨.̸̸̨̨꒪ )
</p>






<h2 class="heading">2ch(2ちゃんねる)系顔文字</h2>
<p>既に2ちゃんねるの顔文字は定番になってしまう程浸透しました。10年前では考えられない流れで少々驚いていますが2ちゃんねるの顔文字はかわいいのでかなり利用頻度が高くてオススメです。</p>

<h3 class="heading">ショボーン系</h3>
<p>(´･ω･`) ｼｮﾎﾞｰﾝ</p>
<p>|ω･`) ｼｮﾎﾞーーﾝ</p>
<p>(´・ω・｀)</p>


<h3 class="heading">キリッ系</h3>
<p>(｀・ω・´)ｷﾘｯ</p>

<h3 class="heading">キター系</h3>
<p>ｷﾀ━(ﾟ∀ﾟ)━!</p>
<p>ｷﾀ━━━━(ﾟ∀ﾟ)━━━━!!</p>


<h3 class="heading">オワタ系</h3>
<p>＼(^o^)／ｵﾜﾀ</p>

<h3 class="heading">ガクブル系</h3>
<p>（（（ ；゜ Д ゜）））</p>


<h3 class="heading">シャキーン系</h3>
<p>(｀･ω･´)ｼｬｷｰﾝ</p>
<p>m9っ`･ω･´)ｼｬｷｰﾝ</p>


<h3 class="heading">ハァハァ系</h3>
<p>(；´Д｀)ﾊｱﾊｱ</p>
<p>(*´д`*)</p>
<p>(*´Д`)ﾊｧﾊｧ</p>
<p>"`ｧ,､ｧ(*´Д｀*)"`ｧ,､ｧ</p>




<h2 class="heading">ニコニコ系顔文字</h2>
<p>特に項目に入れなくて良かったんですがニコ生の人がTwitterでつぶやく時に必ずこの顔文字を使っているなーって感じましたので一応の載せておきます。</p>
<h3 class="heading">ニコニコ系</h3>
<p>
    （◞‸◟）
</p>
<p>
(◞‸ლ)
</p>
<p>
(◞‸◟ㆀ)ｼｮﾎﾞﾝ
</p>

<h2 class="heading">海外顔文字</h2>
<p class="m_0">最近お気に入りの顔文字です。</p>
<p>ほとんどの方が使わないので、ブログの締め等で使わせて頂いています。</p>

<h3 class="heading">笑顔系</h3>
<p>
:)
</p>
<p>
:^)
</p>
<p>
:-)
</p>
<p>
8->
</p>
<p>
:-))
</p>

<h3 class="heading">悲しい系</h3>
<p>
:(
</p>
<p>
:-(
</p>
<p>
8^(
</p>
<p>
:-<
</p>
<p>
(:-
</p>


<h3 class="heading">泣き顔系</h3>
<p>
:"-(
</p>
<p>
:,-(
</p>
<p>
&-|
</p>
<p>
:"-D
</p>
<p>
:"-)
</p>


<h3 class="heading">その他系</h3>
<p>
:P
</p>
<p>
:-@
</p>
<p>
:-c
</p>
<p>
=)
</p>
<p>
:-o
</p>

<h2 class="heading">定番顔文字</h2>

<p>定番と言っても新しめの顔文字を集めてみました。ω系が大好きなのですが、かなりかわいくて使いやすいと思いますのでオススメです。</p>


<h3 class="heading">ω系(個人的に好きなのでここに置かせて頂きます)</h3>

<p>
(｡･ω･｡)
</p>
<p>
(*´ω｀*)
</p>
<p>
(/ω＼)
</p>
<p>
(･`ω･´๑)
</p>
<p>
(・ω・́)
</p>
<p>
ヽ(・ω・)/
</p>
<p>
(๑¯ω¯๑)
</p>
<p>
(°ω°)
</p>
<p>
(´-ω-`)
</p>
<p>
|ω・)ｼﾞｰ
</p>
<p>
(つω`*)
</p>

<h3 class="heading">恥ずかしい・照れる系</h3>
<p>
(,, ´ ・・` ,,)
</p>
<p>
    (灬ºωº灬)
</p>


<h3 class="heading">楽しい系</h3>
<p>
ヾ(˹ᆺ˺✿)ﾉﾞ
</p>
<p>
(๑˃́ꇴ˂̀๑)
</p>
<p>
٩(๑❛ᴗ❛๑)۶
</p>
<p>
(๑"ᴗ"๑)
</p>
<p>
(๑•́ ₃ •̀๑)ｴｰ
</p>



<h3 class="heading">悲しい系</h3>
<p>
    (ू˃̣̣̣̣̣̣︿˂̣̣̣̣̣̣ ू)
</p>
<p>
(｡•́︿•̀｡)
</p>
<p>
(๑•﹏•)
</p>



<h3 class="heading">笑顔系</h3>
<p>
(੭•̀ᴗ•̀)੭
</p>

<p>
（˶′◡‵˶）
</p>
<p>
(。≖ˇ◡◡ˇ≖｡)
</p>
<p>
✩⃛( ͒ ु•·̫• ू ͒)
</p>
<p>
(ෆ❛ั◡❛ัෆ)‼
</p>
<p>
(ू•‧̫•ू⑅)
</p>

<p>
( •ॢᴗ•ॢ⋈)
</p>
<p>
(´ . .̫ . `) ༘ؓ ँั๊ྃ
</p>
<p>
٩(๑′∀ ‵๑)۶•*¨*•.¸¸♪
</p>




<h3 class="heading">泣く系</h3>
<p>
( ˃ ⌑ ˂ഃ )
</p>
<p>
(´；ω；｀)
</p>
<p>
(☍﹏⁰)｡
</p>
<p>
(´；д；`)
</p>
<p>
(&gt;A&lt;。)
</p>


<h3 class="heading">殴る系</h3>
<p>
    ( ‘д‘⊂彡☆))³´) ﾊﾟｰﾝ
</p>




<h3 class="heading">ぺろ系</h3>
<p>
(●´ڡ`●)
</p>
<p>
(⑅๑´ڡ`๑)
</p>



<h3 class="heading">眠い系</h3>
<p>
(⊃д⊂)ﾈﾑｲﾖ-
</p>
<p>
(σ．＿・　)ﾈﾑｲﾖ
</p>
<p>
Zz(ρω-)o゜。
</p>

<h3 class="heading">汗系</h3>
<p>
(ﾉω&lt;；)
</p>
<p>
(´д｀ι)
</p>
<p>
(･∀･；)
</p>


<h2 class="heading">まとめ</h2>
<p>この記事を書いている時に1タッチでクリップボードにコピーするツールも作ろうかなって思ったんですがiPhoneでコピーしようとする時に、その場でユーザー辞書に登録出来る事を知ってビックリしました。デフォルト機能も便利なんですねー。:)</p>
			]]>
			</content:encoded>
			<guid>
			http://programmerbox.com/2013-08-13_cute_emoticon_download/
			</guid>
			<pubDate>Tue, 13 Aug 2013 10:35:27 +0900</pubDate>
			</item>
			</channel>
		</rss>